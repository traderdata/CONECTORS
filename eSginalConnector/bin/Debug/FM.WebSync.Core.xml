<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FM.WebSync.Core</name>
    </assembly>
    <members>
        <member name="T:FM.WebSync.Core.BaseClientArgs">
            <summary>
            Base class which contains properties and methods shared by both WebSync
            <see cref="T:FM.WebSync.Core.ClientArgs"/> and <see cref="T:FM.WebSync.Core.PublisherArgs"/>.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.BaseClientArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.BaseClientArgs"/> class
            with default properties.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BaseClientArgs.RequestUrl">
            <summary>
            Gets or sets the absolute URL of the WebSync request handler. This URL typically ends
            with request.ashx. Defaults to the WebSync On-Demand URL.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BaseClientArgs.RequestTimeout">
            <summary>
            Gets or sets the number of milliseconds to wait for a standard request to return a response
            before it is cancelled and a new attempt is made. Defaults to 15000 (15 seconds).
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BaseClientArgs.DomainName">
            <summary>
            Gets or sets the domain name to send as the <tt>Referrer</tt> with each request.
            If using WebSync On-Demand, this should be set to the domain specified
            in the portal, fully-qualified with http:// or https://. Defaults to
            localhost.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BaseClientArgs.Retries">
            <summary>
            Gets or sets the number of times to retry a request in the event of network failure before
            considering it failed and invoking the corresponding <tt>OnFailure</tt> callback.
            Defaults to 3.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BaseClientArgs.Synchronous">
            <summary>
            Gets or sets whether or not to execute client methods synchronously. This approach is not
            recommended for UI threads, as it will block until the request completes.
            Defaults to <c>null</c>/<c>false</c>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BaseClientArgs.OnRequestCreated">
            <summary>
            Gets or sets the callback to invoke whenever a new HttpWebRequest is created for transmission
            of a request over HTTP to the server. This allows for modification of
            cookies, headers, etc.
            See <see cref="T:FM.WebSync.Core.RequestCreatedArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BaseClientArgs.HttpTransfer">
            <summary>
            Gets or sets the <see cref="P:FM.WebSync.Core.BaseClientArgs.HttpTransfer"/> instance used to handle standard requests.
            Defaults to an instance of <see cref="T:FM.WebSync.Core.HttpWebRequestTransfer"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BaseClientArgs.Source">
            <summary>
            Gets the source parameter sent with each request.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.ClientArgs">
            <summary>
            Constructor arguments for WebSync <see cref="T:FM.WebSync.Core.Client">Clients</see>.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.ClientArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.ClientArgs"/> class
            with default properties.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.ClientArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.ClientArgs"/> class
            with default properties except for the request URL.
            </summary>
            <param name="requestUrl">The absolute URL of the WebSync request handler.</param>
        </member>
        <member name="P:FM.WebSync.Core.ClientArgs.DomainKey">
            <summary>
            Gets or sets the domain key to send with each request. If using WebSync On-Demand,
            this should be set to the public API key specified in the Frozen
            Mountain Portal. If using WebSync Server, this should be used only if grouping
            connections. Defaults to "11111111-1111-1111-1111-111111111111".
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientArgs.StreamRequestUrl">
            <summary>
            Gets or sets the absolute URL of the WebSync request handler (for streaming connections).
            Can be specified to segregate streaming connections and standard requests
            to different domains. Defaults to the RequestUrl.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientArgs.StreamRequestTimeout">
            <summary>
            Gets or sets the number of milliseconds to wait for a streaming connection to return a response
            before it is cancelled and a new attempt is made.  Defaults to the
            RequestTimeout + 25000 (25 seconds).
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientArgs.IgnoreBayeuxIntervalAdvice">
            <summary>
            Gets or sets whether to ignore the Bayeux interval advice returned by the WebSync server and
            re-establish a streaming connection immediately.  Defaults to <c>false</c>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientArgs.Token">
            <summary>
            Gets or sets the token sent with every client request identifying it
            for query-based load balancing. Defaults to the current timestamp.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientArgs.StreamHttpTransfer">
            <summary>
            Gets or sets the <see cref="T:FM.WebSync.Core.HttpTransfer"/> instance used to handle streaming connections.
            Defaults to an instance of <see cref="T:FM.WebSync.Core.HttpWebRequestTransfer"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientArgs.Source">
            <summary>
            Gets the source parameter sent with each request.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.ClientInputArgs`3">
            <summary>
            Base input arguments for WebSync <see cref="T:FM.WebSync.Core.Client"/> methods.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.Extensible">
            <summary>
            <para>
            Base class that defines the properties and methods shared by any class that
            is considered extensible by the Bayeux specification.
            </para>
            <para>
            The Bayeux specification defines the Ext field, which allows custom data to be
            stored with a message using a namespaced key to access the information. This class
            provides methods that store and retrieve JSON data stored in this manner. For example,
            the <see cref="P:FM.WebSync.Core.Extensible.MetaJson"/> property uses the Ext field to store its value
            using "fm.meta" as a key.
            </para>
            <para>
            In addition, classes which inherit from <see cref="T:FM.WebSync.Core.Extensible"/> can store
            dynamic property values for local read/write access without the need to serialize
            to JSON. This can aid greatly in the
            development of third-party extensions to WebSync. Custom information can be stored
            with method arguments in the "before" event and read out again for further
            processing in the "after" event.
            </para>
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.Extensible.MetaExtensionName">
            <summary>
            The reserved extension name for message/publication meta-data.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.Extensible.PublishingClientExtensionName">
            <summary>
            The reserved extension name for records bound to clients on deliveries.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.Extensible.SetExtensionValueJson(System.String,System.String)">
            <summary>
            Stores a serialized value in the extensions.  Must be valid JSON.
            </summary>
            <param name="name">Fully-qualified extension name.</param>
            <param name="valueJson">The extension value in valid JSON format.</param>
        </member>
        <member name="M:FM.WebSync.Core.Extensible.GetExtensionValueJson(System.String)">
            <summary>
            Gets a serialized value stored in the extensions.
            </summary>
            <param name="name">Fully-qualified extension name.</param>
            <returns>The extension value (in JSON format).</returns>
        </member>
        <member name="M:FM.WebSync.Core.Extensible.GetDynamicPropertyValue``1(System.String)">
            <summary>
            Gets a property value from the local cache, using "name" as the key.
            </summary>
            <typeparam name="T">The type of the property value to retrieve.</typeparam>
            <param name="name">The property name. This key is used internally only, but should be namespaced to avoid conflict with third-party extensions.</param>
            <returns>The stored value, if found; otherwise default(T).</returns>
        </member>
        <member name="M:FM.WebSync.Core.Extensible.SetDynamicPropertyValue``1(System.String,``0)">
            <summary>
            Sets a property value in the local cache, using "name" as the key.
            </summary>
            <typeparam name="T">The type of the property value to set.</typeparam>
            <param name="name">The property name. This key is used internally only, but should be namespaced to avoid conflict with third-party extensions.</param>
            <param name="value">The property value. This can be any object that needs to be stored for future use.</param>
        </member>
        <member name="P:FM.WebSync.Core.Extensible.Extensions">
            <summary>
            Gets or sets the extensions library. Generally, this should not be accessed directly. Rather,
            use the getter/setter methods on this class for reads and writes. Provide
            extension methods for <see cref="T:FM.WebSync.Core.Extensible"/> when developing third-party
            extensions so other developers do not need to memorize extension names.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Extensible.MetaJson">
            <summary>
            Gets or sets meta-data associated with the message/publication.  Must be valid JSON. 
            </summary>
            <remarks>
            Use this property to define meta-data about the request itself, such as
            authentication details, etc.
            </remarks>
        </member>
        <member name="P:FM.WebSync.Core.ClientInputArgs`3.OnComplete">
            <summary>
            Gets or sets the callback to invoke after <see cref="P:FM.WebSync.Core.ClientInputArgs`3.OnSuccess"/> or <see cref="P:FM.WebSync.Core.ClientInputArgs`3.OnFailure"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientInputArgs`3.OnFailure">
            <summary>
            Gets or sets the callback to invoke if the request fails.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientInputArgs`3.OnSuccess">
            <summary>
            Gets or sets the callback to invoke if the request succeeds.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientInputArgs`3.ProxyUrl">
            <summary>
            Gets or sets the URL of the proxy to use for this request.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientInputArgs`3.Synchronous">
            <summary>
            Gets or sets whether the request should be executed asynchronously.
            If <c>true</c>, the request will be executed synchronously.
            If <c>false</c>, the request will be executed asynchronously.
            If <c>null</c>, the request will be executed synchronously or asynchronously,
            depending on the value of <see cref="P:FM.WebSync.Core.BaseClient.Synchronous"/> (specified when
            the client was created).  Defaults to <c>null</c>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.ClientOutputArgs">
            <summary>
            Base output arguments for WebSync <see cref="P:FM.WebSync.Core.ClientOutputArgs.Client"/> methods.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientOutputArgs.Latency">
            <summary>
            Gets or sets the number of milliseconds elapsed while completing the request.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientOutputArgs.Timestamp">
            <summary>
            Gets or sets the date/time the message was processed on the server (in UTC/GMT).
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientOutputArgs.ClientId">
            <summary>
            Gets or sets the ID of the WebSync <see cref="P:FM.WebSync.Core.ClientOutputArgs.Client"/> who made the request.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientOutputArgs.Client">
            <summary>
            Gets or sets the active WebSync <see cref="P:FM.WebSync.Core.ClientOutputArgs.Client"/> who made the request.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.ClientResponseArgs">
            <summary>
            The internal representation of data received in response to a client request.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientResponseArgs.Response">
            <summary>
            Gets or sets the response received from the server.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientResponseArgs.Responses">
            <summary>
            Gets or sets the responses received from the server.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientResponseArgs.Latency">
            <summary>
            Gets or sets the network latency calculated during the request.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientResponseArgs.Exception">
            <summary>
            Gets or sets the exception generated by the request.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientResponseArgs.State">
            <summary>
            Gets or sets the internal state object associated with the request.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientResponseArgs.SendArgs">
            <summary>
            Gets or sets the <see cref="T:FM.WebSync.Core.SendContentArgs"/> that triggered the request.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.ConnectArgs">
            <summary>
            Arguments for client connecting.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ConnectArgs.OnComplete">
            <summary>
            Gets or sets the callback to invoke after <see cref="P:FM.WebSync.Core.ConnectArgs.OnSuccess"/> or <see cref="P:FM.WebSync.Core.ConnectArgs.OnFailure"/>.
            See <see cref="T:FM.WebSync.Core.ConnectCompleteArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ConnectArgs.OnFailure">
            <summary>
            Gets or sets the callback to invoke if the connect fails.
            See <see cref="T:FM.WebSync.Core.ConnectFailureArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ConnectArgs.OnSuccess">
            <summary>
            Gets or sets the callback to invoke if the connect succeeds.
            See <see cref="T:FM.WebSync.Core.ConnectSuccessArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ConnectArgs.OnStreamFailure">
            <summary>
            Gets or sets the callback to invoke if the streaming connection fails.
            See <see cref="T:FM.WebSync.Core.StreamFailureArgs"/> for callback argument details.
            </summary>
            <remarks>
            <para>
            This method will be invoked if (a) the connection was lost, automatic retries
            succeeded, but the client had idled on the server (and so needs to reconnect),
            or (b) the connection was lost and automatic retries failed. In the former
            case, <see cref="P:FM.WebSync.Core.StreamFailureArgs.WillReconnect"/> is <c>true</c>, and in the
            latter case, <see cref="P:FM.WebSync.Core.StreamFailureArgs.WillReconnect"/> is <c>false</c>.
            </para>
            <para>
            See <see cref="T:FM.WebSync.Core.Client"/> for more details on these two scenarios.
            </para>
            <para>
            If <see cref="P:FM.WebSync.Core.StreamFailureArgs.WillReconnect"/> is <c>true</c>, the client
            will automatically reconnect. If the reconnect succeeds, the callback specified by
            <see cref="P:FM.WebSync.Core.ConnectArgs.OnSuccess"/> will be invoked with
            <see cref="P:FM.WebSync.Core.ConnectSuccessArgs.IsReconnect"/> set to <c>true</c>.  If the reconnect
            fails, the callback specified by <see cref="P:FM.WebSync.Core.ConnectArgs.OnFailure"/> will be invoked with
            <see cref="P:FM.WebSync.Core.ConnectFailureArgs.IsReconnect"/> set to <c>false</c>.
            </para>
            <para>
            With the exception of UI updates, invocations of this callback with
            <see cref="P:FM.WebSync.Core.StreamFailureArgs.WillReconnect"/> set to <c>true</c> can be
            ignored.
            </para>
            </remarks>
        </member>
        <member name="P:FM.WebSync.Core.ConnectArgs.OnUnhandledReceive">
            <summary>
            Gets or sets the callback to invoke when a message is received on a channel that has no
            local callback specified to handle it.
            See <see cref="T:FM.WebSync.Core.ReceiveArgs"/> for callback argument details.
            </summary>
            <remarks>
            This can occur if (a) a client is manually subscribed to a channel by the server
            or (b) a client subscribed to a channel and then manually removed the local
            callback.
            </remarks>
        </member>
        <member name="P:FM.WebSync.Core.ConnectArgs.StayConnected">
            <summary>
            Gets or sets whether to always attempt to stay connected in the event of network failure. If
            <c>true</c>, the client will continually reconnect, even after exhausting the
            specified number of <see cref="P:FM.WebSync.Core.BaseClient.Retries"/>. If <c>false</c>, the
            client will stop reconnecting if all retry attempts fail.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ConnectArgs.Reconnect">
            <summary>
            Gets or sets whether or not the connect is occurring because the connection has been lost and needs to be re-negotiated.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.BindArgs">
            <summary>
            Arguments for client binding.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BindArgs.OnComplete">
            <summary>
            Gets or sets the callback to invoke after <see cref="P:FM.WebSync.Core.BindArgs.OnSuccess"/> or <see cref="P:FM.WebSync.Core.BindArgs.OnFailure"/>.
            See <see cref="T:FM.WebSync.Core.BindCompleteArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BindArgs.OnFailure">
            <summary>
            Gets or sets the callback to invoke if the bind fails.
            See <see cref="T:FM.WebSync.Core.BindFailureArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BindArgs.OnSuccess">
            <summary>
            Gets or sets the callback to invoke if the bind succeeds.
            See <see cref="T:FM.WebSync.Core.BindSuccessArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BindArgs.Record">
            <summary>
            Gets or sets the record to which the client should be bound.
            Overrides <see cref="P:FM.WebSync.Core.BindArgs.Records"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BindArgs.Records">
            <summary>
            Gets or sets the records to which the client should be bound.
            Overrides <see cref="P:FM.WebSync.Core.BindArgs.Record"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BindArgs.Rebind">
            <summary>
            Gets or sets whether or not the bind is occurring because the connection has been lost and re-negotiated.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.UnbindArgs">
            <summary>
            Arguments for client unbinding.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.UnbindArgs.OnComplete">
            <summary>
            Gets or sets the callback to invoke after <see cref="P:FM.WebSync.Core.UnbindArgs.OnSuccess"/> or <see cref="P:FM.WebSync.Core.UnbindArgs.OnFailure"/>.
            See <see cref="T:FM.WebSync.Core.UnbindCompleteArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.UnbindArgs.OnFailure">
            <summary>
            Gets or sets the callback to invoke if the unbind fails.
            See <see cref="T:FM.WebSync.Core.UnbindFailureArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.UnbindArgs.OnSuccess">
            <summary>
            Gets or sets the callback to invoke if the unbind succeeds.
            See <see cref="T:FM.WebSync.Core.UnbindSuccessArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.UnbindArgs.Record">
            <summary>
            Gets or sets the record from which the client should be unbound.
            Overrides <see cref="P:FM.WebSync.Core.UnbindArgs.Records"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.UnbindArgs.Records">
            <summary>
            Gets or sets the records from which the client should be unbound.
            Overrides <see cref="P:FM.WebSync.Core.UnbindArgs.Record"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.DisconnectArgs">
            <summary>
            Arguments for client disconnecting.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.DisconnectArgs.OnComplete">
            <summary>
            Gets or sets the callback to invoke after <see cref="P:FM.WebSync.Core.DisconnectArgs.OnSuccess"/> or <see cref="P:FM.WebSync.Core.DisconnectArgs.OnFailure"/>.
            See <see cref="T:FM.WebSync.Core.DisconnectCompleteArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.DisconnectArgs.OnFailure">
            <summary>
            Gets or sets the callback to invoke if the disconnect fails.
            See <see cref="T:FM.WebSync.Core.DisconnectFailureArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.DisconnectArgs.OnSuccess">
            <summary>
            Gets or sets the callback to invoke if the disconnect succeeds.
            See <see cref="T:FM.WebSync.Core.DisconnectSuccessArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.PublishArgs">
            <summary>
            Arguments for client publishing.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublishArgs.OnComplete">
            <summary>
            Gets or sets the callback to invoke after <see cref="P:FM.WebSync.Core.PublishArgs.OnSuccess"/> or <see cref="P:FM.WebSync.Core.PublishArgs.OnFailure"/>.
            See <see cref="T:FM.WebSync.Core.PublishCompleteArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublishArgs.OnFailure">
            <summary>
            Gets or sets the callback to invoke if the publish fails.
            See <see cref="T:FM.WebSync.Core.PublishFailureArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublishArgs.OnSuccess">
            <summary>
            Gets or sets the callback to invoke if the publish succeeds.
            See <see cref="T:FM.WebSync.Core.PublishSuccessArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublishArgs.Channel">
            <summary>
            Gets or sets the channel over which to publish the data.
            Must start with a forward slash (/).
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublishArgs.DataJson">
            <summary>
            Gets or sets the data to publish.
            Must be valid JSON. 
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.SubscribeArgs">
            <summary>
            Arguments for client subscribing.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SubscribeArgs.OnComplete">
            <summary>
            Gets or sets the callback to invoke after <see cref="P:FM.WebSync.Core.SubscribeArgs.OnSuccess"/> or <see cref="P:FM.WebSync.Core.SubscribeArgs.OnFailure"/>.
            See <see cref="T:FM.WebSync.Core.SubscribeCompleteArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SubscribeArgs.OnFailure">
            <summary>
            Gets or sets the callback to invoke if the subscribe fails.
            See <see cref="T:FM.WebSync.Core.SubscribeFailureArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SubscribeArgs.OnSuccess">
            <summary>
            Gets or sets the callback to invoke if the subscribe succeeds.
            See <see cref="T:FM.WebSync.Core.SubscribeSuccessArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SubscribeArgs.OnReceive">
            <summary>
            Gets or sets the callback to invoke when data is received on the channel(s).
            See <see cref="T:FM.WebSync.Core.ReceiveArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SubscribeArgs.Channel">
            <summary>
            Gets or sets the channel to which the client should be subscribed.
            Must start with a forward slash (/).
            Overrides <see cref="P:FM.WebSync.Core.SubscribeArgs.Channels"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SubscribeArgs.Channels">
            <summary>
            Gets or sets the channels to which the client should be subscribed.
            Each must start with a forward slash (/).
            Overrides <see cref="P:FM.WebSync.Core.SubscribeArgs.Channel"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SubscribeArgs.Resubscribe">
            <summary>
            Gets or sets whether or not the subscribe is occurring because the connection has been lost and re-negotiated.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.UnsubscribeArgs">
            <summary>
            Arguments for client unsubscribing.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.UnsubscribeArgs.OnComplete">
            <summary>
            Gets or sets the callback to invoke after <see cref="P:FM.WebSync.Core.UnsubscribeArgs.OnSuccess"/> or <see cref="P:FM.WebSync.Core.UnsubscribeArgs.OnFailure"/>.
            See <see cref="T:FM.WebSync.Core.UnsubscribeCompleteArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.UnsubscribeArgs.OnFailure">
            <summary>
            Gets or sets the callback to invoke if the unsubscribe fails.
            See <see cref="T:FM.WebSync.Core.UnsubscribeFailureArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.UnsubscribeArgs.OnSuccess">
            <summary>
            Gets or sets the callback to invoke if the unsubscribe succeeds.
            See <see cref="T:FM.WebSync.Core.UnsubscribeSuccessArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.UnsubscribeArgs.Channel">
            <summary>
            Gets or sets the channel from which the client should be unsubscribed.
            Must start with a forward slash (/).
            Overrides <see cref="P:FM.WebSync.Core.UnsubscribeArgs.Channels"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.UnsubscribeArgs.Channels">
            <summary>
            Gets or sets the channels from which the client should be unsubscribed.
            Each must start with a forward slash (/).
            Overrides <see cref="P:FM.WebSync.Core.UnsubscribeArgs.Channel"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.ClientCompleteArgs">
            <summary>
            Base arguments for <see cref="T:FM.WebSync.Core.Client"/> "OnComplete" callbacks.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.ClientEventArgs">
            <summary>
            Base arguments for <see cref="P:FM.WebSync.Core.ClientEventArgs.Client"/>-triggered events.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientEventArgs.Cancel">
            <summary>
            Gets or sets whether or not to cancel processing of the request.
            If set to <c>true</c>, additional request processing will be cancelled.
            Defaults to <c>false</c>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientEventArgs.Client">
            <summary>
            Gets or sets the <see cref="P:FM.WebSync.Core.ClientEventArgs.Client"/> triggering the event.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.ClientException">
            <summary>
            Exception representing a failure in a WebSync <see cref="T:FM.WebSync.Core.Client"/> request.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.ClientException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.ClientException"/> class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="T:FM.WebSync.Core.ClientFailureArgs">
            <summary>
            Base arguments for <see cref="T:FM.WebSync.Core.Client"/> "OnFailure" callbacks.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientFailureArgs.Exception">
            <summary>
            Gets or sets the exception generated while completing the request.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientFailureArgs.ErrorCode">
            <summary>
            Gets the error code value, if the exception was generated by WebSync; otherwise -1.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.ClientSuccessArgs">
            <summary>
            Base arguments for <see cref="T:FM.WebSync.Core.Client"/> "OnSuccess" callbacks.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.ConnectCompleteArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.ConnectArgs.OnComplete"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ConnectCompleteArgs.IsReconnect">
            <summary>
            Gets or sets whether the connect call
            was triggered by a reconnection after network failure.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.BindCompleteArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.BindArgs.OnComplete"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BindCompleteArgs.IsRebind">
            <summary>
            Gets or sets whether the bind call
            was triggered by a reconnection after network failure.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.UnbindCompleteArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.UnbindArgs.OnComplete"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.DisconnectCompleteArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.DisconnectArgs.OnComplete"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.PublishCompleteArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.PublishArgs.OnComplete"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.SubscribeCompleteArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.SubscribeArgs.OnComplete"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SubscribeCompleteArgs.IsResubscribe">
            <summary>
            Gets or sets whether the subscribe call
            was triggered by a reconnection after network failure.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.UnsubscribeCompleteArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.UnsubscribeArgs.OnComplete"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.AfterConnectArgs">
            <summary>
            Arguments for <see cref="E:FM.WebSync.Core.Client.OnAfterConnect"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.GenericClientAfterEventArgs`1">
            <summary>
            Generic base arguments for <see cref="T:FM.WebSync.Core.Client"/> events that occur
            after a response is received.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.ClientAfterEventArgs">
            <summary>
            Base arguments for <see cref="T:FM.WebSync.Core.Client"/> events that occur
            after a response is received.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientAfterEventArgs.Response">
            <summary>
            Gets or sets the response received from the server.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientAfterEventArgs.Latency">
            <summary>
            Gets or sets the number of milliseconds elapsed while completing the request.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientAfterEventArgs.Exception">
            <summary>
            Gets or sets the exception generated while completing the request, if any.
            Will be <c>null</c> if no exception was generated.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.GenericClientAfterEventArgs`1.MethodArgs">
            <summary>
            Gets or sets the original arguments passed into the client method.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.AfterDisconnectArgs">
            <summary>
            Arguments for <see cref="E:FM.WebSync.Core.Client.OnAfterDisconnect"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.AfterPublishArgs">
            <summary>
            Arguments for <see cref="E:FM.WebSync.Core.Client.OnAfterPublish"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.AfterSubscribeArgs">
            <summary>
            Arguments for <see cref="E:FM.WebSync.Core.Client.OnAfterSubscribe"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.AfterUnsubscribeArgs">
            <summary>
            Arguments for <see cref="E:FM.WebSync.Core.Client.OnAfterUnsubscribe"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.AfterBindArgs">
            <summary>
            Arguments for <see cref="E:FM.WebSync.Core.Client.OnAfterBind"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.AfterUnbindArgs">
            <summary>
            Arguments for <see cref="E:FM.WebSync.Core.Client.OnAfterUnbind"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.BeforeConnectArgs">
            <summary>
            Arguments for <see cref="E:FM.WebSync.Core.Client.OnBeforeConnect"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.GenericClientBeforeEventArgs`1">
            <summary>
            Generic base arguments for <see cref="T:FM.WebSync.Core.Client"/> events that occur
            before a request is sent.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.ClientBeforeEventArgs">
            <summary>
            Base arguments for <see cref="T:FM.WebSync.Core.Client"/> events that occur
            before a request is sent.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.GenericClientBeforeEventArgs`1.MethodArgs">
            <summary>
            Gets or sets the original arguments passed into the client method.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.BeforeDisconnectArgs">
            <summary>
            Arguments for <see cref="E:FM.WebSync.Core.Client.OnBeforeDisconnect"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.BeforePublishArgs">
            <summary>
            Arguments for <see cref="E:FM.WebSync.Core.Client.OnBeforePublish"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.BeforeSubscribeArgs">
            <summary>
            Arguments for <see cref="E:FM.WebSync.Core.Client.OnBeforeSubscribe"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.BeforeUnsubscribeArgs">
            <summary>
            Arguments for <see cref="E:FM.WebSync.Core.Client.OnBeforeUnsubscribe"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.BeforeBindArgs">
            <summary>
            Arguments for <see cref="E:FM.WebSync.Core.Client.OnBeforeBind"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.BeforeUnbindArgs">
            <summary>
            Arguments for <see cref="E:FM.WebSync.Core.Client.OnBeforeUnbind"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.ConnectFailureArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.ConnectArgs.OnFailure"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ConnectFailureArgs.Reconnect">
            <summary>
            Gets or sets whether or not to reconnect automatically after this callback has
            finished execution.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ConnectFailureArgs.IsReconnect">
            <summary>
            Gets or sets whether the connect call
            was triggered by a reconnection after network failure.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.BindFailureArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.BindArgs.OnFailure"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BindFailureArgs.IsRebind">
            <summary>
            Gets or sets whether the bind call
            was triggered by a reconnection after network failure.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.UnbindFailureArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.UnbindArgs.OnFailure"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.StreamFailureArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.ConnectArgs.OnStreamFailure"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.StreamFailureArgs.WillReconnect">
            <summary>
            Gets or sets whether the <see cref="T:FM.WebSync.Core.Client"/> will automatically reconnect
            after the callback returns.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.DisconnectFailureArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.DisconnectArgs.OnFailure"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.PublishFailureArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.PublishArgs.OnFailure"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.SubscribeFailureArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.SubscribeArgs.OnFailure"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SubscribeFailureArgs.IsResubscribe">
            <summary>
            Gets or sets whether the subscribe call
            was triggered by a reconnection after network failure.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.UnsubscribeFailureArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.UnsubscribeArgs.OnFailure"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.ConnectSuccessArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.ConnectArgs.OnSuccess"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ConnectSuccessArgs.IsReconnect">
            <summary>
            Gets or sets whether the connect call
            was triggered by a reconnection after network failure.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.BindSuccessArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.BindArgs.OnSuccess"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BindSuccessArgs.Record">
            <summary>
            Gets or sets the record to which the client was bound.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BindSuccessArgs.Records">
            <summary>
            Gets or sets the records to which the client was bound.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BindSuccessArgs.IsRebind">
            <summary>
            Gets or sets whether the bind call
            was triggered by a reconnection after network failure.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.UnbindSuccessArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.UnbindArgs.OnSuccess"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.UnbindSuccessArgs.Record">
            <summary>
            Gets or sets the record from which the client was unbound.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.UnbindSuccessArgs.Records">
            <summary>
            Gets or sets the records from which the client was unbound.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.DisconnectSuccessArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.DisconnectArgs.OnSuccess"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.PublishSuccessArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.PublishArgs.OnSuccess"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublishSuccessArgs.Channel">
            <summary>
            Gets or sets the channel over which the data was published.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublishSuccessArgs.DataJson">
            <summary>
            Gets or sets the published data.
            Must be valid JSON.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.ReceiveArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.SubscribeArgs.OnReceive"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ReceiveArgs.Channel">
            <summary>
            Gets or sets the channel over which the data was published.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ReceiveArgs.DataJson">
            <summary>
            Gets or sets the published data.
            Must be valid JSON.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ReceiveArgs.PublishingClient">
            <summary>
            Gets or sets details about the client publishing the data.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.SubscribeSuccessArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.SubscribeArgs.OnSuccess"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SubscribeSuccessArgs.Channel">
            <summary>
            Gets or sets the channel to which the client was subscribed.
            Must start with a forward slash (/).
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SubscribeSuccessArgs.Channels">
            <summary>
            Gets or sets the channels to which the client was subscribed.
            Each must start with a forward slash (/).
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SubscribeSuccessArgs.IsResubscribe">
            <summary>
            Gets or sets whether the subscribe call
            was triggered by a reconnection after network failure.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.UnsubscribeSuccessArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.UnsubscribeArgs.OnSuccess"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.UnsubscribeSuccessArgs.Channel">
            <summary>
            Gets or sets the channel from which the client was unsubscribed.
            Must start with a forward slash (/).
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.UnsubscribeSuccessArgs.Channels">
            <summary>
            Gets or sets the channels from which the client was unsubscribed.
            Each must start with a forward slash (/).
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.ReceiveContentArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.SendContentArgs.Callback"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ReceiveContentArgs.ReadContent">
            <summary>
            Gets or sets the content read from the HTTP response.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ReceiveContentArgs.Latency">
            <summary>
            Gets or sets the number of milliseconds elapsed while completing the request.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ReceiveContentArgs.Exception">
            <summary>
            Gets or sets the exception generated while completing the request.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ReceiveContentArgs.State">
            <summary>
            Gets or sets custom data stored with the transfer.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ReceiveContentArgs.SendArgs">
            <summary>
            Gets or sets the original <see cref="T:FM.WebSync.Core.SendContentArgs"/> passed in.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.RequestCreatedArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.BaseClientArgs.OnRequestCreated"/>
            and <see cref="P:FM.WebSync.Core.SendContentArgs.OnRequestCreated"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.RequestCreatedArgs.Sender">
            <summary>
            Gets or sets the sender of the request, either a <see cref="T:FM.WebSync.Core.Client"/> or
            <see cref="T:FM.WebSync.Core.Publisher"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.RequestCreatedArgs.Request">
            <summary>
            Gets or sets the outgoing HTTP request about to be sent to the server.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.SendContentArgs">
            <summary>
            Arguments for HTTP transfer sending.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.SendContentArgs.StartWatchdog(System.Threading.TimerCallback,System.Object)">
            <summary>
            Starts the watchdog timer to track the request.
            </summary>
            <param name="callback">The callback to invoke if the request
            exceeds its timeout.</param>
            <param name="state">The state object to pass into the callback if the request
            exceeds its timeout.</param>
        </member>
        <member name="M:FM.WebSync.Core.SendContentArgs.StopWatchdog">
            <summary>
            Stops the watchdog timer tracking the request.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.SendContentArgs.TriggerWatchdog">
            <summary>
            Triggers the request watchdog timer to execute now, useful for
            manually aborting a transfer.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.SendContentArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.SendContentArgs"/> class
            with default values.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SendContentArgs.Sender">
            <summary>
            Gets or sets the sender of the content, either a <see cref="T:FM.WebSync.Core.Client"/> or
            <see cref="T:FM.WebSync.Core.Publisher"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SendContentArgs.WriteContent">
            <summary>
            Gets or sets the content to transfer over HTTP.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SendContentArgs.WriteContentType">
            <summary>
            Gets or sets the content type of the content to send.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SendContentArgs.Url">
            <summary>
            Gets or sets the target URL for the HTTP request.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SendContentArgs.Synchronous">
            <summary>
            Gets or sets whether or not to transfer the content synchronously.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SendContentArgs.Retries">
            <summary>
            Gets or sets the number of times to retry in the event of network failure.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SendContentArgs.Referrer">
            <summary>
            Gets or sets the referrer to send with the HTTP request.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SendContentArgs.SupportCookielessAutoDetect">
            <summary>
            Gets or sets whether or not to bypass the automatic handling of cookie support
            enforced by ASP.NET web applications with cookieless="AutoDetect".
            If <c>true</c>, a special flag will be added to the HTTP request's
            query string that bypasses ASP.NET cookie redirection. If <c>false</c>,
            the HTTP request will not be modified. Defaults to <c>true</c>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SendContentArgs.Callback">
            <summary>
            Gets or sets the callback to invoke once the HTTP transfer is complete.
            See <see cref="T:FM.WebSync.Core.ReceiveContentArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SendContentArgs.OnRequestCreated">
            <summary>
            Gets or sets the callback to invoke once the outgoing HTTP request is created.
            See <see cref="T:FM.WebSync.Core.RequestCreatedArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SendContentArgs.Timeout">
            <summary>
            Gets or sets the number of milliseconds to wait before timing out the HTTP transfer.
            Defaults to 15000 (15 seconds).
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SendContentArgs.State">
            <summary>
            Gets or sets custom data stored with the transfer and available in
            <see cref="P:FM.WebSync.Core.SendContentArgs.Callback"/> one the transfer is complete.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SendContentArgs.StartTicks">
            <summary>
            Gets or sets the number of ticks returned by the system when the request starts.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SendContentArgs.Watchdog">
            <summary>
            Gets or sets the watchdog timer that keeps track of ongoing requests and their timeouts.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SendContentArgs.WatchdogTriggeredManually">
            <summary>
            Gets or sets whether the watchdog was triggered manually or by an automatic timeout.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.ProxyInvokeArgs">
            <summary>
            Arguments for <see cref="M:FM.WebSync.Core.Proxy.Invoke(FM.WebSync.Core.ProxyInvokeArgs)"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ProxyInvokeArgs.OnBeforeProxy">
            <summary>
            The pre-processing callback to invoke after the incoming requests have been
            received from the client, but before they are proxied to the server.
            See <see cref="T:FM.WebSync.Core.BeforeProxyArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ProxyInvokeArgs.OnProxy">
            <summary>
            The callback to invoke after the outgoing HTTP request has been constructed, but
            before it is sent, allowing modification to cookies, headers, etc.
            See <see cref="T:FM.WebSync.Core.ProxyArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ProxyInvokeArgs.OnAfterProxy">
            <summary>
            The post-processing callback to invoke after the incoming responses have been
            received from the server, but before they are proxied back to the client.
            See <see cref="T:FM.WebSync.Core.AfterProxyArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ProxyInvokeArgs.DomainKey">
            <summary>
            The domain key to send to the server. Will override the domain key
            specified by the client request(s).
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ProxyInvokeArgs.RequestUrl">
            <summary>
            The URL of the WebSync request handler. This URL typically ends with request.ashx.
            Can be relative if the WebSync server is running within the same HTTP context;
            otherwise must be absolute. Defaults to the WebSync On-Demand URL.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ProxyInvokeArgs.ThrowExceptions">
            <summary>
            Whether to throw exceptions or return an exception message if an exception
            is generated. If <c>true</c>, generated exceptions will be thrown. If <c>false</c>,
            generated exceptions will be caught and translated to an <see cref="T:FM.WebSync.Core.Error"/>
            that is returned as a response to the client request.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.AfterProxyArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.ProxyInvokeArgs.OnAfterProxy"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.ProxyOutputArgs">
            <summary>
            Base arguments for <see cref="T:FM.WebSync.Core.Proxy"/>-triggered events.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ProxyOutputArgs.HttpContext">
            <summary>
            The HTTP context of the client request(s).
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ProxyOutputArgs.DomainKey">
            <summary>
            The domain key for the client request(s).
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.AfterProxyArgs.Messages">
            <summary>
            The responses being proxied to the client.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.BeforeProxyArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.ProxyInvokeArgs.OnBeforeProxy"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BeforeProxyArgs.Messages">
            <summary>
            The requests being proxied to the server.
            Set <see cref="P:FM.WebSync.Core.BaseMessage.Successful"/> to <c>false</c> to cancel a request.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.ProxyArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.ProxyInvokeArgs.OnProxy"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ProxyArgs.ServerRequest">
            <summary>
            The outgoing request to the WebSync server.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.GenericPublisherAfterEventArgs`1">
            <summary>
            Generic base arguments for <see cref="T:FM.WebSync.Core.Publisher"/> events that occur after a response is received.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.PublisherAfterEventArgs">
            <summary>
            Base arguments for <see cref="T:FM.WebSync.Core.Publisher"/> events that occur
            after a response is received.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.PublisherEventArgs">
            <summary>
            Base arguments for <see cref="P:FM.WebSync.Core.PublisherEventArgs.Publisher"/>-triggered events.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublisherEventArgs.Cancel">
            <summary>
            Gets or sets whether or not to cancel processing of the request.
            If set to <c>true</c>, additional request processing will be cancelled.
            Defaults to <c>false</c>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublisherEventArgs.Publisher">
            <summary>
            Gets or sets the <see cref="P:FM.WebSync.Core.PublisherEventArgs.Publisher"/> triggering the event.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublisherAfterEventArgs.Response">
            <summary>
            Gets or sets the response received from the server.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublisherAfterEventArgs.Latency">
            <summary>
            Gets or sets the number of milliseconds elapsed while completing the request.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublisherAfterEventArgs.Exception">
            <summary>
            Gets or sets the exception generated while completing the request, if any.
            Will be <c>null</c> if no exception was generated.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.GenericPublisherAfterEventArgs`1.OriginalArgs">
            <summary>
            Gets or sets the original arguments passed into the publisher method.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.GenericPublisherBeforeEventArgs`1">
            <summary>
            Generic base arguments for <see cref="T:FM.WebSync.Core.Publisher"/> events that occur before a request is sent.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.PublisherBeforeEventArgs">
            <summary>
            Base arguments for <see cref="T:FM.WebSync.Core.Publisher"/> events that occur
            before a request is sent.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.GenericPublisherBeforeEventArgs`1.OriginalArgs">
            <summary>
            Gets or sets the original arguments passed into the publisher method.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.PublisherResponseArgs">
            <summary>
            The internal representation of data received in response to a publication request.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublisherResponseArgs.Response">
            <summary>
            Gets or sets the responses received from the server.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublisherResponseArgs.Latency">
            <summary>
            Gets or sets the network latency calculated during the request.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublisherResponseArgs.Exception">
            <summary>
            Gets or sets the exception generated by the request.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublisherResponseArgs.State">
            <summary>
            Gets or sets the internal state object associated with the request.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.PublicationArgs">
            <summary>
            Arguments for publisher publishing.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.PublisherInputArgs`2">
            <summary>
            Base input arguments for WebSync <see cref="T:FM.WebSync.Core.Publisher"/> methods.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublisherInputArgs`2.OnComplete">
            <summary>
            Gets or sets the callback to invoke if the request completes (success or failure).
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublisherInputArgs`2.OnException">
            <summary>
            Gets or sets the callback to invoke if the request throws an exception.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublisherInputArgs`2.Synchronous">
            <summary>
            Gets or sets whether the request should be executed synchronously or asynchronously.
            If <c>true</c>, the request will be executed synchronously.
            If <c>false</c>, the request will be executed asynchronously.
            If <c>null</c>, the request will be executed synchronously or asynchronously,
            depending on the value of <see cref="P:FM.WebSync.Core.BaseClient.Synchronous"/> (specified when
            the publisher was created).  Defaults to <c>null</c>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublicationArgs.OnComplete">
            <summary>
            Gets or sets the callback to invoke if the publish completes.
            See <see cref="T:FM.WebSync.Core.PublicationCompleteArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublicationArgs.OnException">
            <summary>
            Gets or sets the callback to invoke if an exception is thrown while completing the request.
            See <see cref="T:FM.WebSync.Core.PublicationExceptionArgs"/> for callback argument details.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublicationArgs.Publication">
            <summary>
            Gets or sets the publication to publish.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublicationArgs.Publications">
            <summary>
            Gets or sets the publications to publish.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.PublicationCompleteArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.PublicationArgs.OnComplete"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.PublisherCompleteArgs">
            <summary>
            Base arguments for <see cref="T:FM.WebSync.Core.Publisher"/> "OnComplete" callbacks.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.PublisherOutputArgs">
            <summary>
            Base output arguments for WebSync <see cref="P:FM.WebSync.Core.PublisherOutputArgs.Publisher"/> methods.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublisherOutputArgs.Latency">
            <summary>
            Gets or sets the number of milliseconds elapsed while completing the request.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublisherOutputArgs.Publisher">
            <summary>
            Gets or sets the active WebSync <see cref="P:FM.WebSync.Core.PublisherOutputArgs.Publisher"/> from whom the request originated.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublicationCompleteArgs.Publication">
            <summary>
            Gets or sets the publication that was potentially published.
            Check <see cref="P:FM.WebSync.Core.BaseMessage.Successful"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublicationCompleteArgs.Publications">
            <summary>
            Gets or sets the publications that were potentially published.
            Check <see cref="P:FM.WebSync.Core.BaseMessage.Successful"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.AfterPublicationArgs">
            <summary>
            Arguments for <see cref="E:FM.WebSync.Core.Publisher.OnAfterPublication"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.BeforePublicationArgs">
            <summary>
            Arguments for <see cref="E:FM.WebSync.Core.Publisher.OnBeforePublication"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.PublicationExceptionArgs">
            <summary>
            Arguments for <see cref="P:FM.WebSync.Core.PublicationArgs.OnException"/>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.PublisherExceptionArgs">
            <summary>
            Base arguments for <see cref="T:FM.WebSync.Core.Publisher"/> "OnException" callbacks.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublisherExceptionArgs.Exception">
            <summary>
            Gets or sets the exception generated while completing the request.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.PublisherException">
            <summary>
            Exception representing a failure in a WebSync <see cref="T:FM.WebSync.Core.Publisher"/> request.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.PublisherException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.PublisherException"/> class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="T:FM.WebSync.Core.PublisherArgs">
            <summary>
            Constructor arguments for WebSync <see cref="T:FM.WebSync.Core.Publisher">Publishers</see>.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.PublisherArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.PublisherArgs"/> class
            with default properties.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.PublisherArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.PublisherArgs"/> class
            with default properties except for the request URL.
            </summary>
            <param name="requestUrl">The absolute URL of the WebSync request handler.</param>
        </member>
        <member name="P:FM.WebSync.Core.PublisherArgs.DomainKey">
            <summary>
            Gets or sets the domain key to send with each request. If using WebSync On-Demand,
            this should be set to the public or private API key specified in the Frozen
            Mountain Portal. If using WebSync Server, this should be used only if grouping
            connections. Defaults to "11111111-1111-1111-1111-111111111111".
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublisherArgs.Source">
            <summary>
            Gets the source parameter sent with each request.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.BaseClient">
            <summary>
            Base class which contains properties and methods shared by both WebSync
            <see cref="T:FM.WebSync.Core.Client">Clients</see> and <see cref="T:FM.WebSync.Core.Publisher">Publishers</see>.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.BaseClient.#ctor(FM.WebSync.Core.BaseClientArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.Client"/> class according to the
            specified arguments.
            </summary>
            <param name="args">The base client configuration.
            See <see cref="T:FM.WebSync.Core.BaseClientArgs"/> for details.</param>
        </member>
        <member name="M:FM.WebSync.Core.BaseClient.SanitizeDomainName(System.String)">
            <summary>
            Sanitizes a domain name by appending http:// or https:// if not present.
            </summary>
            <param name="domainName">The domain name to sanitize.</param>
            <returns>The sanitized domain name.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseClient.AddQueryToUrl(System.String,System.String)">
            <summary>
            Escapes and adds a query parameter as a key/empty-value pair to a URL.
            </summary>
            <param name="url">The URL with the query to which the key/value should be added.</param>
            <param name="key">The key of the query parameter to add.</param>
            <returns>The original URL with the query parameter added.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseClient.AddQueryToUrl(System.String,System.String,System.String)">
            <summary>
            Escapes and adds a query parameter as a key/value pair to a URL.
            </summary>
            <param name="url">The URL with the query to which the key/value should be added.</param>
            <param name="key">The key of the query parameter to add.</param>
            <param name="value">The value of the query parameter to add.</param>
            <returns>The original URL with the query parameter added.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseClient.AddCookielessAutoDetectToUrl(System.String)">
            <summary>
            Adds AspxAutoDetectCookieSupport=1 to the URL's query to support
            cases where the web server has cookieless="AutoDetect" configured for
            session state management.
            </summary>
            <param name="url">The URL to which the value should be appended.</param>
            <returns>The original URL with support added for cookieless="AutoDetect".</returns>
        </member>
        <member name="P:FM.WebSync.Core.BaseClient.RequestUrl">
            <summary>
            Gets or sets the absolute URL of the WebSync request handler. This URL typically ends
            with request.ashx.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BaseClient.RequestTimeout">
            <summary>
            Gets or sets the number of milliseconds to wait for a standard request to return a response
            before it is cancelled and a new attempt is made.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BaseClient.DomainName">
            <summary>
            Gets or sets the domain name to send as the <tt>Referrer</tt> with each request.
            If using WebSync On-Demand, this should be set to the domain specified
            in the Frozen Mountain Portal, fully-qualified with http:// or https://.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BaseClient.Retries">
            <summary>
            Gets or sets the number of times to retry a request in the event of network failure before
            considering it failed and invoking the corresponding "OnFailure" callback.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BaseClient.Synchronous">
            <summary>
            Gets or sets whether or not to execute client methods synchronously. This approach is not
            recommended for UI threads, as it will block until the request completes.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BaseClient.OnRequestCreated">
            <summary>
            Gets or sets the callback to invoke whenever a new HttpWebRequest is created for transmission
            of a request over HTTP to the server. This allows for modification of
            cookies, headers, etc.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BaseClient.HttpTransfer">
            <summary>
            Gets or sets the HTTP transfer used to send requests to the server.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BaseClient.Source">
            <summary>
            Gets or sets the source parameter sent with each request.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.Bayeux.Advice">
            <summary>
            Advice class used in <see cref="T:FM.WebSync.Core.Bayeux.Message">Bayeux Messages</see>.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.Bayeux.BaseAdvice">
            <summary>
            Base advice class used in <see cref="T:FM.WebSync.Core.Bayeux.Message">Bayeux Messages</see> and for nested advice.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.Serializable">
            <summary>
            Base definition for classes that allow serialization to/from JSON.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.Serializable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.Serializable"/> class.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Serializable.IsDirty">
            <summary>
            Gets or sets a value indicating whether this instance is dirty.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Serializable.IsSerialized">
            <summary>
            Gets or sets a value indicating whether this instance is serialized.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Serializable.Serialized">
            <summary>
            Gets or sets the serialized value of this instance.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.BaseAdvice.ToJson">
            <summary>
            Serializes the base advice object to JSON.
            </summary>
            <returns>The serialized advice object.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.BaseAdvice.ToJson(FM.WebSync.Core.Bayeux.BaseAdvice)">
            <summary>
            Serializes a single base advice object to JSON.
            </summary>
            <param name="baseAdvice">The base advice object to serialize.</param>
            <returns>The serialized advice object.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.BaseAdvice.FromJson(System.String)">
            <summary>
            Deserializes a single base advice object from JSON.
            </summary>
            <param name="baseAdviceJson">The JSON base advice object to deserialize.</param>
            <returns>The deserialized advice object.</returns>
        </member>
        <member name="P:FM.WebSync.Core.Bayeux.BaseAdvice.Reconnect">
            <summary>
            Gets or sets how the client should attempt to re-establish a connection with the server.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Bayeux.BaseAdvice.Interval">
            <summary>
            Gets or sets the interval to wait before following the reconnect advice.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Bayeux.BaseAdvice.Hosts">
            <summary>
            Gets or sets the list of host names that may be used as alternate servers.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Advice.ToJson">
            <summary>
            Serializes the advice object to JSON.
            </summary>
            <returns>The serialized advice object.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Advice.ToJson(FM.WebSync.Core.Bayeux.Advice)">
            <summary>
            Serializes a single advice object to JSON.
            </summary>
            <param name="advice">The advice object to serialize.</param>
            <returns>The serialized advice object.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Advice.FromJson(System.String)">
            <summary>
            Deserializes a single advice object from JSON.
            </summary>
            <param name="adviceJson">The JSON advice object to deserialize.</param>
            <returns>The deserialized advice object.</returns>
        </member>
        <member name="P:FM.WebSync.Core.Bayeux.Advice.LongPolling">
            <summary>
            Gets or sets advice specific to long-polling clients.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Bayeux.Advice.CallbackPolling">
            <summary>
            Gets or sets advice specific to callback-polling clients.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.Bayeux.BaseMessage">
            <summary>
            Base message class used for defining commonalities between <see cref="T:FM.WebSync.Core.Bayeux.Message">Bayeux Messages</see> and <see cref="T:FM.WebSync.Core.Bayeux.Publication">Bayeux Publications</see>.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.Bayeux.BaseMessage.TimestampFormat">
            <summary>
            The ISO 8601 profile for the timestamp.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.BaseMessage.ConvertExtensionsToExt(FM.WebSync.Core.Extensions)">
            <summary>
            Converts an extensions object to a Bayeux ext property in JSON format.
            </summary>
            <param name="extensions">The extensions object.</param>
            <returns>The Bayeux ext property in JSON format.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.BaseMessage.ConvertExtToExtensions(System.String)">
            <summary>
            Converts a Bayeux ext property in JSON format to an extensions object.
            </summary>
            <param name="ext">The Bayeux ext property in JSON format.</param>
            <returns>The extensions object.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.BaseMessage.ConvertDateTimeToString(System.Nullable{System.DateTime})">
            <summary>
            Converts a timestamp from a DateTime object to a Bayeux string.
            </summary>
            <param name="timestamp">The timestamp as a DateTime object.</param>
            <returns>The timestamp as a Bayeux string.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.BaseMessage.ConvertStringToDateTime(System.String)">
            <summary>
            Converts a timestamp from a Bayeux string to a DateTime object.
            </summary>
            <param name="timestamp">The timestamp as a Bayeux string.</param>
            <returns>The timestamp as a DateTime object.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.BaseMessage.CurrentTimestamp">
            <summary>
            Gets a Bayeux timestamp for the current time.
            </summary>
            <returns>The current time as a Bayeux timestamp.</returns>
        </member>
        <member name="P:FM.WebSync.Core.Bayeux.BaseMessage.Channel">
            <summary>
            Gets or sets the channel over which the message should be sent.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Bayeux.BaseMessage.Data">
            <summary>
            Gets or sets the data associated with the message. Must be valid JSON.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Bayeux.BaseMessage.Ext">
            <summary>
            Gets or sets namespaced extension data to associate with this message. Must be valid JSON.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Bayeux.BaseMessage.Successful">
            <summary>
            Gets or sets whether or not the request was successful.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Bayeux.BaseMessage.Error">
            <summary>
            Gets or sets the error message, if applicable.  Should be set if successful is <c>false</c>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Bayeux.BaseMessage.Timestamp">
            <summary>
            Gets or sets the timestamp representing when the message was received at the server.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.BaseMessage">
            <summary>
            Base class which contains properties and methods shared by both WebSync
            <see cref="T:FM.WebSync.Core.Message">Messages</see> and <see cref="T:FM.WebSync.Core.Publication">Publications</see>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BaseMessage.Successful">
            <summary>
            Gets or sets the flag that indicates whether the request should be
            processed. If the message represents a response, this indicates whether the
            processing was successful (and is always non-null). If set to <c>false</c>, the
            <see cref="P:FM.WebSync.Core.BaseMessage.Error"/> property should be set to a friendly error
            message.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BaseMessage.Error">
            <summary>
            Gets or sets the friendly error message if <see cref="P:FM.WebSync.Core.BaseMessage.Successful"/> is
            <c>false</c>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BaseMessage.Timestamp">
            <summary>
            Gets or sets the date/time the message was processed on the server (in UTC/GMT).
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BaseMessage.Channel">
            <summary>
            Gets or sets the channel to which the message/publication is being sent.
            For non-publish requests, this is set to a Bayeux meta-channel.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BaseMessage.DataJson">
            <summary>
            Gets or sets the data published or being published.
            Must be valid JSON.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BaseMessage.Ext">
            <summary>
            Gets or sets the MetaJson value.
            This property is deprecated. Use MetaJson instead.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.Bayeux.MetaChannels">
            <summary>
            Contains the reserved Bayeux meta-channels and methods to assist in detecting them.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.Bayeux.MetaChannels.MetaPrefix">
            <summary>
            The reserved prefix for Bayeux meta-channels.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.Bayeux.MetaChannels.Handshake">
            <summary>
            The reserved channel for handshake requests/responses.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.Bayeux.MetaChannels.Connect">
            <summary>
            The reserved channel for connect requests/responses.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.Bayeux.MetaChannels.Disconnect">
            <summary>
            The reserved channel for disconnect requests/responses.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.Bayeux.MetaChannels.Bind">
            <summary>
            The reserved channel for bind requests/responses.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.Bayeux.MetaChannels.Unbind">
            <summary>
            The reserved channel for unbind requests/responses.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.Bayeux.MetaChannels.Subscribe">
            <summary>
            The reserved channel for subscribe requests/responses.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.Bayeux.MetaChannels.Unsubscribe">
            <summary>
            The reserved channel for unsubscribe requests/responses.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.MetaChannels.IsMeta(System.String)">
            <summary>
            Determines whether the specified channel name is a reserved Bayeux channel.
            </summary>
            <param name="channel">The channel name to check.</param>
            <returns>
            	<c>true</c> if the specified channel name is reserved; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:FM.WebSync.Core.Bayeux.ReconnectAdvice">
            <summary>
            Allowed reconnect advice values for <see cref="T:FM.WebSync.Core.Bayeux.Message">Bayeux Messages</see>.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.Bayeux.ReconnectAdvice.Retry">
            <summary>
            Indicates that the client should retry its last request.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.Bayeux.ReconnectAdvice.Handshake">
            <summary>
            Indicates that the client should attempt to handshake.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.Bayeux.ReconnectAdvice.None">
            <summary>
            Indicates that the client should not attempt to reconnect.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.Bayeux.ConnectionType">
            <summary>
            Allowed connection type values for <see cref="T:FM.WebSync.Core.Bayeux.Message">Bayeux Messages</see>.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.Bayeux.ConnectionType.LongPolling">
            <summary>
            Indicates that the long-polling transport is supported.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.Bayeux.ConnectionType.CallbackPolling">
            <summary>
            Indicates that the callback-polling transport is supported.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.Bayeux.ConnectionType.IFrame">
            <summary>
            (Unsupported) Indicates that the iframe transport is supported.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.Bayeux.ConnectionType.Flash">
            <summary>
            (Unsupported) Indicates that the flash transport is supported.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.DeserializePropertyCallback`1">
            <summary>
            Method signature for deserializing a JSON name/value pair and assigning it to an object property.
            </summary>
            <typeparam name="T">The type of the object to deserialize.</typeparam>
            <param name="target">The object being deserialized.</param>
            <param name="nameJson">The name of the property to assign.</param>
            <param name="valueJson">The value of the property to assign.</param>
        </member>
        <member name="T:FM.WebSync.Core.SerializePropertiesCallback`1">
            <summary>
            Method signature for serializing object properties and appending them to a JSON string.
            </summary>
            <typeparam name="T">The type of the object to serialize.</typeparam>
            <param name="source">The object being serialized.</param>
            <param name="json">The JSON string being constructed.</param>
        </member>
        <member name="T:FM.WebSync.Core.DeserializeObjectCallback`1">
            <summary>
            Method signature for deserializing a JSON string and assigning it to an array of objects.
            </summary>
            <typeparam name="T">The type of the object to deserialize.</typeparam>
            <param name="targets">The array of deserialized objects.</param>
            <param name="json">A serialized object.</param>
        </member>
        <member name="T:FM.WebSync.Core.SerializeObjectsCallback`1">
            <summary>
            Method signature for serializing an array of objects and appending them to a JSON string.
            </summary>
            <typeparam name="T">The type of the object to serialize.</typeparam>
            <param name="sources">The objects to be serialized.</param>
            <param name="json">The JSON string being constructed.</param>
        </member>
        <member name="T:FM.WebSync.Core.BaseSerializer">
            <summary>
            Contains methods to assist in object serialization/deserialization.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.BaseSerializer.SerializeObjectJson``1(``0,FM.WebSync.Core.SerializePropertiesCallback{``0})">
            <summary>
            Serializes an object into a JSON string.
            </summary>
            <typeparam name="T">The type of the object to serialize.</typeparam>
            <param name="source">The object being serialized.</param>
            <param name="callback">The method used for serializing properties.</param>
            <returns>The object as a JSON string.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseSerializer.DeserializeObjectJson``1(System.String,FM.WebSync.Core.DeserializePropertyCallback{``0})">
            <summary>
            Deserializes a JSON string into a target object type.
            </summary>
            <typeparam name="T">The type of the object to deserialize.</typeparam>
            <param name="json">The JSON-encoded string.</param>
            <param name="callback">The method used for deserializing a property.</param>
            <returns>The deserialized object.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseSerializer.SerializeObjectArrayJson``1(``0[],FM.WebSync.Core.SerializeObjectsCallback{``0})">
            <summary>
            Serializes an object array into a JSON string.
            </summary>
            <typeparam name="T">The type of the object to serialize.</typeparam>
            <param name="sources">The object array being serialized.</param>
            <param name="callback">The method used for serializing objects.</param>
            <returns>The object array as a JSON string.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseSerializer.DeserializeObjectArrayJson``1(System.String,FM.WebSync.Core.DeserializeObjectCallback{``0})">
            <summary>
            Deserializes a JSON string into an array of target object types.
            </summary>
            <typeparam name="T">The type of the object to deserialize.</typeparam>
            <param name="json">The JSON-encoded string.</param>
            <param name="callback">The method used for deserializing an object.</param>
            <returns>An array of deserialized objects.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseSerializer.SerializeStringArray(System.String[])">
            <summary>
            Serializes a string array to JSON.
            </summary>
            <param name="array">An array of string values.</param>
            <returns>A JSON-serialized string array.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseSerializer.DeserializeStringArray(System.String)">
            <summary>
            Deserializes a simple string array from JSON (no commas in strings).
            </summary>
            <param name="arrayJson">A JSON-serialized string array.</param>
            <returns>An array of string values.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseSerializer.SerializeRaw(System.String)">
            <summary>
            Serializes a piece of raw JSON.
            </summary>
            <param name="data">The raw data.</param>
            <returns>The serialized data.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseSerializer.DeserializeRaw(System.String)">
            <summary>
            Deserializes a piece of raw JSON.
            </summary>
            <param name="dataJson">The raw data.</param>
            <returns>The deserialized data.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseSerializer.SerializeString(System.String)">
            <summary>
            Serializes a string.
            </summary>
            <param name="value">The string to serialize.</param>
            <returns>The serialized string value.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseSerializer.DeserializeString(System.String)">
            <summary>
            Deserializes a string.
            </summary>
            <param name="valueJson">The string to deserialize.</param>
            <returns>The deserialized string value.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseSerializer.SerializeBoolean(System.Nullable{System.Boolean})">
            <summary>
            Serializes a boolean value.
            </summary>
            <param name="value">The boolean to serialize.</param>
            <returns>The serialized boolean value.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseSerializer.DeserializeBoolean(System.String)">
            <summary>
            Deserializes a boolean value.
            </summary>
            <param name="valueJson">The boolean JSON to deserialize.</param>
            <returns>The deserialized boolean value.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseSerializer.SerializeInteger(System.Nullable{System.Int32})">
            <summary>
            Serializes an integer value.
            </summary>
            <param name="value">The integer to serialize.</param>
            <returns>The serialized integer value.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseSerializer.DeserializeInteger(System.String)">
            <summary>
            Deserializes an integer value.
            </summary>
            <param name="valueJson">The integer JSON to deserialize.</param>
            <returns>The deserialized integer value.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseSerializer.SerializeLong(System.Nullable{System.Int64})">
            <summary>
            Serializes a long value.
            </summary>
            <param name="value">The long to serialize.</param>
            <returns>The serialized long value.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseSerializer.DeserializeLong(System.String)">
            <summary>
            Deserializes a long value.
            </summary>
            <param name="valueJson">The long JSON to deserialize.</param>
            <returns>The deserialized long value.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseSerializer.SerializeDecimal(System.Nullable{System.Decimal})">
            <summary>
            Serializes a decimal value.
            </summary>
            <param name="value">The decimal to serialize.</param>
            <returns>The serialized decimal value.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseSerializer.DeserializeDecimal(System.String)">
            <summary>
            Deserializes a decimal value.
            </summary>
            <param name="valueJson">The decimal JSON to deserialize.</param>
            <returns>The deserialized decimal value.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseSerializer.SerializeDouble(System.Nullable{System.Double})">
            <summary>
            Serializes a double value.
            </summary>
            <param name="value">The double to serialize.</param>
            <returns>The serialized double value.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseSerializer.DeserializeDouble(System.String)">
            <summary>
            Deserializes a double value.
            </summary>
            <param name="valueJson">The double JSON to deserialize.</param>
            <returns>The deserialized double value.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseSerializer.SerializeFloat(System.Nullable{System.Single})">
            <summary>
            Serializes a float value.
            </summary>
            <param name="value">The float to serialize.</param>
            <returns>The serialized float value.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseSerializer.DeserializeFloat(System.String)">
            <summary>
            Deserializes a float value.
            </summary>
            <param name="valueJson">The float JSON to deserialize.</param>
            <returns>The deserialized float value.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseSerializer.TrimQuotes(System.String)">
            <summary>
            Trims the quotes from a JavaScript string value.
            </summary>
            <param name="value">The JavaScript string value.</param>
            <returns>The string without quotes.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseSerializer.EscapeString(System.String)">
            <summary>
            Escapes any special characters in a string.
            </summary>
            <param name="text">The string without escaped characters.</param>
            <returns>The escaped string.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseSerializer.UnescapeString(System.String)">
            <summary>
            Unescapes any special characters from a string.
            </summary>
            <param name="text">The string with escaped characters.</param>
            <returns>The unescaped string.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BaseSerializer.IsValidJson(System.String)">
            <summary>
            Determines whether the specified JSON string is valid.
            </summary>
            <param name="json">The JSON string to validate.</param>
            <returns>True if the JSON string is valid; false otherwise.</returns>
        </member>
        <member name="T:FM.WebSync.Core.Bayeux.Record">
            <summary>
            Implementation of a Bayeux record used for binding and unbinding clients.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Record.ToJson">
            <summary>
            Serializes the record to JSON.
            </summary>
            <returns>The record in JSON-serialized format.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Record.ToJson(FM.WebSync.Core.Bayeux.Record)">
            <summary>
            Serializes a record to JSON.
            </summary>
            <param name="record">The record to serialize.</param>
            <returns>The JSON-serialized record.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Record.FromJson(System.String)">
            <summary>
            Deserializes a record from JSON.
            </summary>
            <param name="recordJson">The JSON string to deserialize.</param>
            <returns>The deserialized record.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Record.ToJsonMultiple(FM.WebSync.Core.Bayeux.Record[])">
            <summary>
            Serializes a list of records to JSON.
            </summary>
            <param name="records">The list of records to serialize.</param>
            <returns>The JSON-serialized array of records.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Record.FromJsonMultiple(System.String)">
            <summary>
            Deserializes a list of records from JSON.
            </summary>
            <param name="recordsJson">The JSON string to deserialize.</param>
            <returns>The deserialized list of records.</returns>
        </member>
        <member name="P:FM.WebSync.Core.Bayeux.Record.Key">
            <summary>
            Gets or sets the key of the bind value.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Bayeux.Record.Private">
            <summary>
            Gets or sets whether the record is private to the binding client and server, or public to
            other clients.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Bayeux.Record.Value">
            <summary>
            Gets or sets the bind value. Must be valid JSON.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Serializer.SerializeAdvice(FM.WebSync.Core.Bayeux.Advice)">
            <summary>
            Serializes Bayeux advice to JSON.
            </summary>
            <param name="advice">The Bayeux advice to serialize.</param>
            <returns>The serialized Bayeux advice.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Serializer.DeserializeAdvice(System.String)">
            <summary>
            Deserializes Bayeux advice from JSON.
            </summary>
            <param name="adviceJson">The Bayeux advice (in JSON) to deserialize.</param>
            <returns>The deserialized Bayeux advice.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Serializer.SerializeBaseAdvice(FM.WebSync.Core.Bayeux.BaseAdvice)">
            <summary>
            Serializes base Bayeux advice to JSON.
            </summary>
            <param name="baseAdvice">The base Bayeux advice to serialize.</param>
            <returns>The serialized base Bayeux advice.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Serializer.DeserializeBaseAdvice(System.String)">
            <summary>
            Deserializes base Bayeux advice from JSON.
            </summary>
            <param name="baseAdviceJson">The base Bayeux advice (in JSON) to deserialize.</param>
            <returns>The deserialized base Bayeux advice.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Serializer.SerializeReconnectAdvice(FM.WebSync.Core.Bayeux.ReconnectAdvice)">
            <summary>
            Serializes Bayeux reconnect advice to JSON.
            </summary>
            <param name="reconnectAdvice">The Bayeux reconnect advice to serialize.</param>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Serializer.DeserializeReconnectAdvice(System.String)">
            <summary>
            Deserializes Bayeux reconnect advice from JSON
            </summary>
            <param name="reconnectAdviceJson">The Bayeux reconnect advice (in JSON) to deserialize.</param>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Serializer.SerializeRecord(FM.WebSync.Core.Bayeux.Record)">
            <summary>
            Serializes a Bayeux record to JSON.
            </summary>
            <param name="record">The Bayeux record to serialize.</param>
            <returns>The serialized Bayeux record.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Serializer.DeserializeRecord(System.String)">
            <summary>
            Deserializes a Bayeux record from JSON.
            </summary>
            <param name="recordJson">The Bayeux record (in JSON) to deserialize.</param>
            <returns>The deserialized Bayeux record.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Serializer.SerializeRecordArray(FM.WebSync.Core.Bayeux.Record[])">
            <summary>
            Serializes a list of Bayeux records to JSON.
            </summary>
            <param name="records">The Bayeux records to serialize.</param>
            <returns>The serialized Bayeux records.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Serializer.DeserializeRecordArray(System.String)">
            <summary>
            Deserializes a list of Bayeux records from JSON.
            </summary>
            <param name="recordsJson">The Bayeux records (in JSON) to deserialize.</param>
            <returns>The deserialized Bayeux records.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Serializer.SerializeMessage(FM.WebSync.Core.Bayeux.Message)">
            <summary>
            Serializes a Bayeux message to JSON.
            </summary>
            <param name="message">The Bayeux message to serialize.</param>
            <returns>The serialized Bayeux message.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Serializer.DeserializeMessage(System.String)">
            <summary>
            Deserializes a Bayeux message from JSON.
            </summary>
            <param name="messageJson">The Bayeux message (in JSON) to deserialize.</param>
            <returns>The deserialized Bayeux message.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Serializer.SerializeMessageArray(FM.WebSync.Core.Bayeux.Message[])">
            <summary>
            Serializes a list of Bayeux messages to JSON.
            </summary>
            <param name="messages">The Bayeux messages to serialize.</param>
            <returns>The serialized Bayeux messages.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Serializer.DeserializeMessageArray(System.String)">
            <summary>
            Deserializes a list of Bayeux messages from JSON.
            </summary>
            <param name="messagesJson">The Bayeux messages (in JSON) to deserialize.</param>
            <returns>The deserialized Bayeux messages.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Serializer.SerializeConnectionType(FM.WebSync.Core.Bayeux.ConnectionType)">
            <summary>
            Serializes a Bayeux connection type to JSON.
            </summary>
            <param name="connectionType">The Bayeux connection type to serialize.</param>
            <returns>The serialized Bayeux connection type.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Serializer.DeserializeConnectionType(System.String)">
            <summary>
            Deserializes a Bayeux connection type from JSON.
            </summary>
            <param name="connectionTypeJson">The Bayeux connection type (in JSON) to deserialize.</param>
            <returns>The deserialized Bayeux connection type.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Serializer.SerializeConnectionTypeArray(FM.WebSync.Core.Bayeux.ConnectionType[])">
            <summary>
            Serializes a list of Bayeux connection types to JSON.
            </summary>
            <param name="connectionTypes">The list of Bayeux connection types to serialize.</param>
            <returns>The serialized Bayeux connection types.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Serializer.DeserializeConnectionTypeArray(System.String)">
            <summary>
            Deserializes a list of Bayeux connection types from JSON.
            </summary>
            <param name="connectionTypesJson">The list of Bayeux connection types (in JSON) to deserialize.</param>
            <returns>The deserialized Bayeux connection types.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Serializer.SerializePublication(FM.WebSync.Core.Bayeux.Publication)">
            <summary>
            Serializes a Bayeux publication to JSON.
            </summary>
            <param name="publication">The Bayeux publication to serialize.</param>
            <returns>The serialized Bayeux publication.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Serializer.DeserializePublication(System.String)">
            <summary>
            Deserializes a Bayeux publication from JSON.
            </summary>
            <param name="publicationJson">The Bayeux publication (in JSON) to deserialize.</param>
            <returns>The deserialized Bayeux publication.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Serializer.SerializePublicationArray(FM.WebSync.Core.Bayeux.Publication[])">
            <summary>
            Serializes a list of Bayeux publications to JSON.
            </summary>
            <param name="publications">The Bayeux publications to serialize.</param>
            <returns>The serialized Bayeux publications.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Serializer.DeserializePublicationArray(System.String)">
            <summary>
            Deserializes a list of Bayeux publications from JSON.
            </summary>
            <param name="publicationsJson">The Bayeux publications (in JSON) to deserialize.</param>
            <returns>The deserialized Bayeux publications.</returns>
        </member>
        <member name="T:FM.WebSync.Core.BoundRecords">
            <summary>
            A table of values bound to a client, mapped by key.
            </summary>
            <remarks>
            Accesses to instance members are not guaranteed to be thread-safe.
            </remarks>
        </member>
        <member name="M:FM.WebSync.Core.BoundRecords.CopyOut">
            <summary>
            Clones and copies the bound records to a new record array.
            </summary>
            <returns>An array of records.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BoundRecords.Clone">
            <summary>
            Clones and returns the bound records.
            </summary>
            <returns>A cloned copy of the bound records.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BoundRecords.GetRecord(System.String)">
            <summary>
            Gets a bound record.
            </summary>
            <param name="key">The key of the bound record.</param>
            <returns>The bound record.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BoundRecords.SetRecord(System.String,FM.WebSync.Core.Record)">
            <summary>
            Sets a bound record.
            </summary>
            <param name="key">The key of the bound record.</param>
            <param name="record">The record to set.</param>
        </member>
        <member name="M:FM.WebSync.Core.BoundRecords.TryGetRecord(System.String,FM.WebSync.Core.Record@)">
            <summary>
            Gets the value (formatted as JSON) associated with the specified key.
            </summary>
            <param name="key">The key of the value to get.</param>
            <param name="record">When this method returns, contains the record associated with the specified
                key, if the key is found; otherwise, <c>null</c>. This parameter is passed uninitialized.</param>
            <returns><c>true</c> if the <see cref="T:FM.WebSync.Core.BoundRecords"/> contains a
                record with the specified key; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BoundRecords.Add(System.String,FM.WebSync.Core.Record)">
            <summary>
            Adds the specified key and value (formatted as JSON) to the bound records.
            </summary>
            <param name="key">The key of the element to add.</param>
            <param name="record">The record to add.</param>
        </member>
        <member name="M:FM.WebSync.Core.BoundRecords.ContainsKey(System.String)">
            <summary>
            Determines whether the <see cref="T:FM.WebSync.Core.BoundRecords"/> contains the specified key.
            </summary>
            <param name="key">The key to locate in the <see cref="T:FM.WebSync.Core.BoundRecords"/>.</param>
            <returns>true if the <see cref="T:FM.WebSync.Core.BoundRecords"/> contains a
                value with the specified key; otherwise, false.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BoundRecords.Remove(System.String)">
            <summary>
            Removes the value with the specified key from the <see cref="T:FM.WebSync.Core.BoundRecords"/>.
            </summary>
            <param name="key">The key of the value to remove.</param>
            <returns>true if the key is successfully found and removed; otherwise, false.
                This method returns false if key is not found in the <see cref="T:FM.WebSync.Core.BoundRecords"/>.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BoundRecords.Add(FM.WebSync.Core.Record)">
            <summary>
            Adds the specified record to the <see cref="T:FM.WebSync.Core.BoundRecords"/>.
            </summary>
            <param name="record">The record to add.</param>
        </member>
        <member name="M:FM.WebSync.Core.BoundRecords.System#Collections#Generic#ICollection{FM#WebSync#Core#Record}#Clear">
            <summary>
            Removes all records from the <see cref="T:FM.WebSync.Core.BoundRecords"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:FM.WebSync.Core.BoundRecords"/> is read-only.
            </exception>
        </member>
        <member name="M:FM.WebSync.Core.BoundRecords.Contains(FM.WebSync.Core.Record)">
            <summary>
            Determines whether the <see cref="T:FM.WebSync.Core.BoundRecords"/> contains the specified record.
            </summary>
            <param name="record">The record to check.</param>
            <returns>
            	<c>true</c> if the record exists; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:FM.WebSync.Core.BoundRecords.CopyTo(FM.WebSync.Core.Record[],System.Int32)">
            <summary>
            Copies the records of the <see cref="T:FM.WebSync.Core.BoundRecords"/> to an array, starting at a particular array index.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the records copied from <see cref="T:FM.WebSync.Core.BoundRecords"/>. The array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="M:FM.WebSync.Core.BoundRecords.Remove(FM.WebSync.Core.Record)">
            <summary>
            Removes the specified record from the <see cref="T:FM.WebSync.Core.BoundRecords"/>.
            </summary>
            <param name="record">The record to remove.</param>
            <returns><c>true</c> if the record was removed; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BoundRecords.ToJson">
            <summary>
            Serializes this instance to JSON.
            </summary>
            <remarks>
            Private records are never serialized to JSON for security purposes.
            </remarks>
            <returns>The JSON-formatted bound records.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BoundRecords.ToJson(FM.WebSync.Core.BoundRecords)">
            <summary>
            Serializes a bound records hashtable to JSON.
            </summary>
            <remarks>
            Private records are never serialized to JSON for security purposes.
            </remarks>
            <param name="boundRecords">The bound records hashtable to serialize.</param>
            <returns>The JSON-formatted bound records hashtable.</returns>
        </member>
        <member name="M:FM.WebSync.Core.BoundRecords.FromJson(System.String)">
            <summary>
            Deserializes a JSON-formatted bound records hashtable.
            </summary>
            <param name="boundRecordsJson">The JSON-formatted bound records hashtable to deserialize.</param>
            <returns>The bound records hashtable.</returns>
        </member>
        <member name="P:FM.WebSync.Core.BoundRecords.Keys">
            <summary>
            Gets a collection containing the keys in the <see cref="T:FM.WebSync.Core.BoundRecords"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BoundRecords.Records">
            <summary>
            Gets a collection containing the records in the <see cref="T:FM.WebSync.Core.BoundRecords"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BoundRecords.Item(System.String)">
            <summary>
            Gets or sets the record with the specified key.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.BoundRecords.Count">
            <summary>
            Gets the number of records contained in the <see cref="T:FM.WebSync.Core.BoundRecords"/>.
            </summary>
            <value></value>
            <returns>
            The number of records contained in the <see cref="T:FM.WebSync.Core.BoundRecords"/>.
            </returns>
        </member>
        <member name="P:FM.WebSync.Core.BoundRecords.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:FM.WebSync.Core.BoundRecords"/> is read-only.
            </summary>
            <value></value>
            <returns><c>true</c> if the <see cref="T:FM.WebSync.Core.BoundRecords"/> is read-only; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:FM.WebSync.Core.SingleCallback`1">
            <summary>
            Generic method signature for callbacks with a single parameter.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.EmptyCallback">
            <summary>
            Generic method signature for callbacks with no parameters.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.DoubleCallback`2">
            <summary>
            Generic method signature for callbacks with two parameters.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.Client">
            <summary>
            <para>
            The WebSync client, used for subscribing to channels and receiving data, as well as
            publishing data to specific channels.
            </para>
            </summary>
            <remarks>
            <para>
            If subscribing is not necessary and publishing data is all that is required, use
            the <see cref="T:FM.WebSync.Core.Publisher"/>, which does not maintain a streaming connection to
            the server for receiving data on subscribed channels.
            </para>
            <para>
            When using WebSync Server, set the <see cref="P:FM.WebSync.Core.BaseClientArgs.RequestUrl"/>.
            When using WebSync On-Demand, set the <see cref="P:FM.WebSync.Core.ClientArgs.DomainKey"/> to your
            public API key and the <see cref="P:FM.WebSync.Core.BaseClientArgs.DomainName"/> to your domain.
            </para>
            <para>
            The WebSync client has 7 primary operations:
            </para>
            <list type="number">
                <item>
                    Connect/Disconnect: Responsible for setting up or taking down a
                        streaming connection to the server.
                </item>
                <item>
                    Bind/Unbind: Responsible for attaching and detaching public/private client
                        details like a user name or email address.
                </item>
                <item>
                    Subscribe/Unsubscribe: Responsible for opting in or out of receiving
                        data published to specific channels.
                </item>
                <item>
                    Publish: Responsible for sending data to the server for distribution
                        to clients subscribed to a specific channel.
                </item>
            </list>
            <para>
            Each method (and the constructor) take a single "args" object. This object defines
            callback functions, configuration settings, and error handling information. It
            allows the client to default to sensible values, while allowing easy overrides. 
            </para>
            <para>
            The WebSync client is designed to be as robust and fault-tolerant as possible. If a
            network failure occurs while a request is being processed, the client will
            automatically launch a new attempt. How many times it will retry is based on the
            specified number of <see cref="P:FM.WebSync.Core.BaseClientArgs.Retries"/>.
            </para>
            <para>
            Maintaining a streaming connection lies at the heart of WebSync, and so special care
            is given to ensure that a streaming connection remains active, even in the presence
            of total network failure.
            </para>
            <para>
            Since WebSync clients often subscribe to channels to receive partial updates, it is
            highly recommended to do initial state load in the callback specified by
            <see cref="P:FM.WebSync.Core.SubscribeArgs.OnSuccess"/>. This way, (a) there are no missed
            partial updates between the state load and the subscription, and (b) in the event of
            connection failure and automatic reconnection/resubscription, the state will be
            automatically refreshed.
            </para>
            <para>
            There are two possible scenarios for streaming connection failures.
            </para>
            <h5>Scenario 1: Connection lost, automatic retries succeed, but the client has idled on the server</h5>
            <para>
            In this scenario, the client will be returned to its former state automatically -
            the connection will be re-established and any bindings and subscriptions
            will be automatically restored. However, because the server considered the client to
            be idle, it was automatically disconnected and unsubscribed, meaning any data sent
            to it's subscribed channel(s) during that time will not be received.
            </para>
            <para>
            How to handle: update the UI to indicate temporary disconnection.
            </para>
            <list>
            <item>
            The callback specified by <see cref="P:FM.WebSync.Core.ConnectArgs.OnStreamFailure"/>
            will always be invoked first with the <see cref="P:FM.WebSync.Core.StreamFailureArgs.WillReconnect"/>
            flag set to <c>true</c>. UI updates to indicate disconnection should occur here.
            </item>
            <item>
            The client will then proceed to aquire a new client ID <b>automatically</b>
            using the last set of arguments passed in.
            If the reconnection succeeds, the callback specified by
            <see cref="P:FM.WebSync.Core.ConnectArgs.OnSuccess"/> will be invoked with the
            <see cref="P:FM.WebSync.Core.ConnectSuccessArgs.IsReconnect"/> flag set to <c>true</c>. Otherwise, the
            callback specified by <see cref="P:FM.WebSync.Core.ConnectArgs.OnFailure"/> will be invoked with the
            <see cref="P:FM.WebSync.Core.ConnectFailureArgs.IsReconnect"/> flag set to <c>true</c>.
            </item>
            <item>
            Next, any client bindings will be restored <b>automatically</b>. If a rebind
            succeeds, the callback specified by
            <see cref="P:FM.WebSync.Core.BindArgs.OnSuccess"/> will be invoked with the
            <see cref="P:FM.WebSync.Core.BindSuccessArgs.IsRebind"/> flag set to <c>true</c>. Otherwise, the
            callback specified by <see cref="P:FM.WebSync.Core.BindArgs.OnFailure"/> will be invoked with the
            <see cref="P:FM.WebSync.Core.BindFailureArgs.IsRebind"/> flag set to <c>true</c>.
            </item>
            <item>
            Finally, any client subscriptions will be restored <b>automatically</b>.
            If a resubscribe succeeds, the callback specified by
            <see cref="P:FM.WebSync.Core.SubscribeArgs.OnSuccess"/> will be invoked with the
            <see cref="P:FM.WebSync.Core.SubscribeSuccessArgs.IsResubscribe"/> flag set to <c>true</c>. Otherwise, the
            callback specified by <see cref="P:FM.WebSync.Core.SubscribeArgs.OnFailure"/> will be invoked with the
            <see cref="P:FM.WebSync.Core.SubscribeFailureArgs.IsResubscribe"/> flag set to <c>true</c>.
            </item>
            </list>
            <h5>Scenario 2: Connection lost, automatic retries fail.</h5>
            <para>
            If the network connection could not be re-established using the number of retries
            available, the client must give up. This can be avoided by setting the number of
            <see cref="P:FM.WebSync.Core.BaseClientArgs.Retries"/> to a higher number or by setting
            <see cref="P:FM.WebSync.Core.ConnectArgs.StayConnected"/> to <c>true</c>, which will force the client
            to repeat its attempts even if the number of retries is exhausted.
            </para>
            <para>
            How to handle: update the UI to incidate permanent disconnection.
            </para>
            <list>
            <item>
            The callback specified by <see cref="P:FM.WebSync.Core.ConnectArgs.OnStreamFailure"/>
            will be invoked with the <see cref="P:FM.WebSync.Core.StreamFailureArgs.WillReconnect"/>
            flag set to <c>false</c>. UI updates to indicate disconnection should occur here.
            </item>
            </list>
            <example>
            <para>
            Here's a simple example of how to create a client in C#, establish a streaming
            connection, start listening for data, and publish a message to other subscribers.
            (Launch two copies to see the message delivery.)
            </para>
            <code>
            using System;
            using System.Linq;
            using FM.WebSync.Core;
            using System.Runtime.Serialization;
            
            namespace FM.WebSync.Documentation
            {
                class Program
                {
                    [DataContract]
                    private class Payload
                    {
                        [DataMember(Name = "text")]
                        public string Text { get; set; }
            
                        [DataMember(Name = "time")]
                        public DateTime Time { get; set; }
                    }
            
                    static void Main(string[] args)
                    {
                        // the channel for this example
                        string channel = "/example";
            
                        Console.Write("Connecting...");
            
                        Client client = new Client("http://localhost/request.ashx");
                        client.Connect(new ConnectArgs
                        {
                            OnSuccess = (successArgs) =&gt;
                            {
                                Console.WriteLine("Connected with ID " + successArgs.ClientId + ".");
                            },
                            OnStreamFailure = (streamFailureArgs) =&gt;
                            {
                                Console.WriteLine("Network problems have been detected. " +
                                    (streamFailureArgs.WillReconnect ? "Will" : "Will not") + " reconnect.");
                            },
                            OnFailure = (failureArgs) =&gt;
                            {
                                Console.WriteLine("Could not connect. " + failureArgs.Exception.Message);
                            }
                        });
            
                        client.Subscribe(new SubscribeArgs
                        {
                            Channel = channel,
                            OnSuccess = (successArgs) =&gt;
                            {
                                Console.WriteLine("Subscribed to " + successArgs.Channel + ".");
                            },
                            OnFailure = (failureArgs) =&gt;
                            {
                                Console.WriteLine("Could not subscribe. " + failureArgs.Exception.Message);
                            },
                            OnReceive = (receiveArgs) =&gt;
                            {
                                // deserialize from JSON
                                Payload payload = JSON.Deserialize&lt;Payload&gt;(receiveArgs.DataJson);
                                Console.WriteLine("Received data! (text: " + payload.Text + ", time: " + payload.Time + ")");
                            }
                        });
                        
                        client.Publish(new PublishArgs
                        {
                            Channel = channel,
                            DataJson = JSON.Serialize(new Payload
                            {
                                Text = "Hello, world!",
                                Time = DateTime.Now
                            }),
                            OnSuccess = (successArgs) =&gt;
                            {
                                Console.WriteLine("Published to " + successArgs.Channel + ".");
                            },
                            OnFailure = (failureArgs) =&gt;
                            {
                                Console.WriteLine("Could not publish. " + failureArgs.Exception.Message);
                            }
                        });
                    }
                }
            }
            </code>
            <para>
            For those uncomfortable with the lambda-style creation of methods, this can easily
            be written in the old style of C# as well. Here's just a partial sample:
            </para>
            <code>
            static void Main(string[] args)
            {
                ClientArgs clientArgs = new ClientArgs();
                clientArgs.RequestUrl = "http://localhost/request.ashx";
                Client client = new Client(clientArgs);
            
                ConnectArgs connectArgs = new ConnectArgs();
                connectArgs.OnSuccess = OnSuccess;
                connectArgs.OnFailure = OnFailure;
                client.Connect(connectArgs);
            }
            
            static void OnSuccess(ConnectSuccessArgs args)
            {
                Console.WriteLine("Connected with ID " + args.ClientId + ".");
            }
            
            static void OnFailure(ConnectFailureArgs args)
            {
                Console.WriteLine("Could not connect. " + args.Exception.Message);
            }
            </code>
            </example>
            </remarks>
        </member>
        <member name="M:FM.WebSync.Core.Client.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.Client"/> class with default values.
            Use the client if you need to subscribe to a channel and receive data.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.Client.#ctor(FM.WebSync.Core.ClientArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.Client"/> class according to the
            specified arguments. Use the client if you need to subscribe to a channel and
            receive data.
            </summary>
            <param name="clientArgs">The client configuration.
            See <see cref="T:FM.WebSync.Core.ClientArgs"/> for details.</param>
        </member>
        <member name="M:FM.WebSync.Core.Client.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.Client"/> class with the specified
            request URL and otherwise default values. Use the client if you need to subscribe
            to a channel and receive data.
            </summary>
            <param name="requestUrl">The WebSync request URL. By default, WebSync uses URLs that end with request.ashx.</param>
        </member>
        <member name="M:FM.WebSync.Core.Client.SetHandler(System.String,FM.WebSync.Core.SingleCallback{FM.WebSync.Core.ReceiveArgs})">
            <summary>
            Sets a callback to be invoked whenever messages are received for the specified
            channel. This will override any previous callbacks linked to the channel.
            </summary>
            <remarks>
            <para>
            This method does <b>not</b> subscribe you to a channel. Rather, it caches a
            callback to be executed when messages are received on a particular
            channel. This is typically done in parallel with a server-side subscribe (not
            requested by the client) to set a local callback in the cache.
            </para>
            <para>
            This overrides any previous callback set for the specified channel.
            </para>
            </remarks>
            <param name="channel">The channel over which the messages will be received.</param>
            <param name="onReceive">The callback to invoke when a message is received.</param>
        </member>
        <member name="M:FM.WebSync.Core.Client.GetHandler(System.String)">
            <summary>
            Gets the callback invoked whenever messages are received for the
            specified channel.
            </summary>
            <param name="channel">The channel over which the messages are being received.</param>
            <returns>The callback invoked when a message is received, if a callback
            is set; otherwise <c>null</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Client.UnsetHandler(System.String)">
            <summary>
            Unsets a callback from being invoked whenever messages are received for the
            specified channel.
            </summary>
            <remarks>
            <para>
            This method does <b>not</b> unsubscribe you from a channel. Rather, it removes
            from cache the callback to be executed when messages are received on an a
            particular channel. This is typically done in parallel with a server-side
            unsubscribe (not requested by the client) to clean up the callback cache.
            </para>
            </remarks>
            <param name="channel">The channel over which the messages are being received.</param>
            <returns><c>true</c> if the callback was previously set; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Client.Reconnect">
            <summary>
            Reconnects after a stream failure using the most recent <see cref="T:FM.WebSync.Core.ConnectArgs"/>.
            </summary>
            <remarks>
            This method should only be called from the callback specified by
            <see cref="P:FM.WebSync.Core.ConnectArgs.OnStreamFailure"/> and only if the
            <see cref="P:FM.WebSync.Core.StreamFailureArgs.WillReconnect"/> flag is set to <c>false</c>.
            Otherwise, the client will reconnect automatically.
            </remarks>
            <returns>The client.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Client.Reconnect(FM.WebSync.Core.ConnectArgs)">
            <summary>
            Reconnects after a stream failure using the specified <see cref="T:FM.WebSync.Core.ConnectArgs"/>.
            </summary>
            <remarks>
            This method should only be called from the callback specified by
            <see cref="P:FM.WebSync.Core.ConnectArgs.OnStreamFailure"/> and only if the
            <see cref="P:FM.WebSync.Core.StreamFailureArgs.WillReconnect"/> flag is set to <c>false</c>.
            Otherwise, the client will reconnect automatically.
            </remarks>
            <param name="connectArgs">The <see cref="T:FM.WebSync.Core.ConnectArgs"/> to use when reconnecting.
            See <see cref="T:FM.WebSync.Core.ConnectArgs"/> for details.</param>
            <returns>The client.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Client.Connect">
            <summary>
            Sets up and maintains a streaming connection to the server using default values.
            </summary>
            <remarks>
            While this method will typically run asychronously, the WebSync client is
            designed to be used without (much) consideration for its asynchronous nature.
            To that end, any calls to methods that require an active connection, like
            bind, subscribe, and publish, will be
            queued automatically and executed once this method has completed successfully.
            </remarks>
            <returns>The client.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Client.Connect(FM.WebSync.Core.ConnectArgs)">
            <summary>
            Sets up and maintains a streaming connection to the server.
            </summary>
            <remarks>
            <para>
            While this method will typically run asychronously, the WebSync client
            is designed to be used without (much) consideration for its asynchronous nature.
            To that end, any calls to methods that require an active connection, like
            bind, subscribe, and publish, will be
            queued automatically and executed once this method has completed successfully.
            </para>
            <example>
            <code>
            client.Connect(new ConnectArgs
            {
                OnSuccess = (args) =&gt;
                {
                    Console.WriteLine("Connected with ID " + args.ClientId + ".");
                },
                OnStreamFailure = (args) =&gt;
                {
                    Console.WriteLine("Network problems have been detected. " +
                        (args.WillReconnect ? "Will" : "Will not") + " reconnect.");
                },
                OnFailure = (args) =&gt;
                {
                    Console.WriteLine("Could not connect. " + args.Exception.Message);
                }
            });
            </code>
            </example>
            </remarks>
            <param name="connectArgs">The connect arguments.
            See <see cref="T:FM.WebSync.Core.ConnectArgs"/> for details.</param>
            <returns>The client.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Client.Disconnect">
            <summary>
            Takes down a streaming connection to the server and unsubscribes the client
            using default values.
            </summary>
            <remarks>
            After the disconnect completes successfully,
            any further calls to methods that require an active connection, like
            bind, subscribe, and publish, will be
            queued automatically and executed only if/when the client reconnects.
            </remarks>
            <returns>The client.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Client.Disconnect(FM.WebSync.Core.DisconnectArgs)">
            <summary>
            Takes down a streaming connection to the server and unsubscribes the client.
            </summary>
            <remarks>
            <para>
            After the disconnect completes successfully,
            any further calls to methods that require an active connection, like
            bind, subscribe, and publish, will be
            queued automatically and executed only if/when the client reconnects.
            </para>
            <example>
            <code>
            client.Disconnect(new DisconnectArgs
            {
                OnSuccess = (args) =&gt;
                {
                    Console.WriteLine("Disconnected.");
                },
                OnFailure = (args) =&gt;
                {
                    Console.WriteLine("Could not disconnect. " + args.Exception.Message);
                }
            });
            </code>
            </example>
            </remarks>
            <param name="disconnectArgs">The disconnect arguments.
            See <see cref="T:FM.WebSync.Core.DisconnectArgs"/> for details.</param>
            <returns>The client.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Client.Bind(FM.WebSync.Core.BindArgs)">
            <summary>
            Binds the client to a public or private data record so it is visible to other
            clients or just to the server.
            </summary>
            <remarks>
            <para>
            When the bind completes successfully, the callback specified by
            <see cref="P:FM.WebSync.Core.BindArgs.OnSuccess"/> will be invoked, passing in the bound record(s),
            <b>including any modifications made on the server</b>.
            </para>
            <example>
            <code>
            client.Bind(new BindArgs
            {
                Record = new Record
                {
                    Key = "userdetails",
                    ValueJson = JSON.Serialize(new UserDetails // custom class
                    {
                        UserName = "jdoe",
                        Email = "john.doe@frozenmountain.com"
                    })
                },
                OnSuccess = (args) =&gt;
                {
                    Console.WriteLine("Bound to record with key " + args.Record.Key + ".");
                },
                OnFailure = (args) =&gt;
                {
                    Console.WriteLine("Could not bind. " + args.Exception.Message);
                }
            });
            </code>
            </example>
            </remarks>
            <param name="bindArgs">The bind arguments.
            See <see cref="T:FM.WebSync.Core.BindArgs"/> for details.</param>
            <returns>The client.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Client.Unbind(FM.WebSync.Core.UnbindArgs)">
            <summary>
            Unbinds the client from a public or private data record so it is no longer visible
            by other clients or the server.
            </summary>
            <remarks>
            When the unbind completes successfully, the callback specified
            by <see cref="P:FM.WebSync.Core.UnbindArgs.OnSuccess"/> will be invoked, passing in the unbound
            record(s), <b>including any modifications made on the server</b>.
            <example>
            <code>
            client.Unbind(new UnbindArgs
            {
                Record = new Record
                {
                    Key = "userdetails" // previously bound key
                },
                OnSuccess = (args) =&gt;
                {
                    Console.WriteLine("Unbound from record with key " + args.Record.Key + ".");
                },
                OnFailure = (args) =&gt;
                {
                    Console.WriteLine("Could not unbind. " + args.Exception.Message);
                }
            });
            </code>
            </example>
            </remarks>
            <param name="unbindArgs">The unbind arguments.
            See <see cref="T:FM.WebSync.Core.UnbindArgs"/> for details.</param>
            <returns>The client.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Client.Subscribe(FM.WebSync.Core.SubscribeArgs)">
            <summary>
            Subscribes the client to receive messages on one or more channels.
            </summary>
            <remarks>
            When the subscribe completes successfully, the callback specified by
            <see cref="P:FM.WebSync.Core.SubscribeArgs.OnSuccess"/> will be invoked, passing in the subscribed
            channel(s), <b>including any modifications made on the server</b>.
            <example>
            <code>
            client.Subscribe(new SubscribeArgs
            {
                Channel = "/example",
                OnSuccess = (args) =&gt;
                {
                    Console.WriteLine("Subscribed to channel " + args.Channel + ".");
                },
                OnFailure = (args) =&gt;
                {
                    Console.WriteLine("Could not subscribe. " + args.Exception.Message);
                },
                OnReceive = (args) =&gt;
                {
                    Console.WriteLine("Received data! (" + args.DataJson + ")");
                }
            });
            </code>
            </example>
            </remarks>
            <param name="subscribeArgs">The subscribe arguments.
            See <see cref="T:FM.WebSync.Core.SubscribeArgs"/> for details.</param>
            <returns>The client.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Client.Unsubscribe(FM.WebSync.Core.UnsubscribeArgs)">
            <summary>
            Unsubscribes the client from receiving messages on one or more channels.
            </summary>
            <remarks>
            When the unsubscribe completes successfully, the callback specified by
            <see cref="P:FM.WebSync.Core.UnsubscribeArgs.OnSuccess"/> will be invoked, passing in the
            unsubscribed channel(s), <b>including any modifications made on the server</b>.
            <example>
            <code>
            client.Unsubscribe(new UnsubscribeArgs
            {
                Channel = "/example",
                OnSuccess = (args) =&gt;
                {
                    Console.WriteLine("Unsubscribed from channel " + args.Channel + ".");
                },
                OnFailure = (args) =&gt;
                {
                    Console.WriteLine("Could not unsubscribe. " + args.Exception.Message);
                }
            });
            </code>
            </example>
            </remarks>
            <param name="unsubscribeArgs">The unsubscribe arguments.
            See <see cref="T:FM.WebSync.Core.UnsubscribeArgs"/> for details.</param>
            <returns>The client.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Client.Publish(FM.WebSync.Core.PublishArgs)">
            <summary>
            Publishes data to a specified channel.
            </summary>
            <remarks>
            When the publish completes successfully, the callback specified by
            <see cref="P:FM.WebSync.Core.PublishArgs.OnSuccess"/> will be invoked, passing in the
            channel and published data, <b>including any modifications made on the server</b>.
            By default, clients do <b>not</b> publish to themselves, so if the client is
            subscribed to the channel to which it published, the callback specified by
            <see cref="P:FM.WebSync.Core.SubscribeArgs.OnReceive"/> will not fire.
            <example>
            <code>
            client.Publish(new PublishArgs
            {
                Channel = "/example",
                DataJson = "{\"text\":\"Hello, world!\"}",
                OnSuccess = (args) =&gt;
                {
                    Console.WriteLine("Published data to " + args.Channel + ".");
                },
                OnFailure = (args) =&gt;
                {
                    Console.WriteLine("Could not publish. " + args.Exception.Message);
                }
            });
            </code>
            </example>
            </remarks>
            <param name="publishArgs">The publish arguments.
            See <see cref="T:FM.WebSync.Core.PublishArgs"/> for more details.</param>
            <returns>The client.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Client.StartBatch">
            <summary>
            Flags the start of a batch of requests to be sent together to the server.
            </summary>
            <remarks>
            This is used in conjunction with <see cref="M:FM.WebSync.Core.Client.EndBatch"/>, which flags
            the end of a batch of requests and starts sending them to the server. Batching
            is used to optimize round-trips to the server by reducing the overhead
            associated with creating multiple HTTP requests.
            </remarks>
            <returns>The client.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Client.EndBatch">
            <summary>
            Flags the end of a batch of requests and starts sending them to the server.
            </summary>
            <remarks>
            This is used in conjunction with <see cref="M:FM.WebSync.Core.Client.StartBatch"/>, which must
            be called first to flag the start of a batch of requests to be sent together
            to the server. Batching is used to optimize round-trips to the server by
            reducing the overhead associated with creating multiple HTTP requests.
            </remarks>
            <returns>The client.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Client.Dispose">
            <summary>
            Releases disposable resources associated with the client.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.Client.GetSubscribedChannels">
            <summary>
            Gets the client's subscribed channels.
            </summary>
            <returns>The client's subscribed channels.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Client.GetBoundRecords">
            <summary>
            Gets the client's bound records.
            </summary>
            <returns>The client's bound records.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Client.GetBoundRecord(System.String)">
            <summary>
            Gets a record from the client's bound records.
            </summary>
            <param name="key">The key of the bound record.</param>
            <returns>The bound record.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Client.GetBoundValueJson(System.String)">
            <summary>
            Gets a serialized value stored in the client's bound records.
            </summary>
            <param name="key">The key of the bound record.</param>
            <returns>The value of the bound record (in JSON format).</returns>
        </member>
        <member name="P:FM.WebSync.Core.Client.Id">
            <summary>
            Gets or sets the server-generated WebSync client ID. This value is only set if the client is
            connected, so reference it only after <see cref="P:FM.WebSync.Core.ConnectArgs.OnSuccess"/> has
            executed. Overload for <see cref="P:FM.WebSync.Core.Client.ClientId"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Client.ClientId">
            <summary>
            Gets or sets the server-generated WebSync client ID. This value is only set if the client is
            connected, so reference it only after <see cref="P:FM.WebSync.Core.ConnectArgs.OnSuccess"/> has
            executed. Overload for <see cref="P:FM.WebSync.Core.Client.Id"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Client.DomainKey">
            <summary>
            Gets or sets the domain key to send with each request. If using WebSync On-Demand,
            this should be set to the public API key specified in the Frozen
            Mountain Portal. If using WebSync Server, this should be used only if grouping
            connections.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Client.StreamRequestUrl">
            <summary>
            Gets or sets the absolute URL of the WebSync request handler (for streaming connections).
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Client.StreamRequestTimeout">
            <summary>
            Gets or sets the number of milliseconds to wait for a streaming connection to return a response
            before it is cancelled and a new attempt is made.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Client.IgnoreBayeuxIntervalAdvice">
            <summary>
            Gets or sets whether to ignore the Bayeux interval advice returned by the WebSync server and
            re-establish a streaming connection immediately.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Client.State">
            <summary>
            Gets or sets the current state of the client (Connected, Connecting, or Disconnected).
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Client.UserState">
            <summary>
            Gets or sets any extra data to keep stored with the client.
            </summary>
            <remarks>
            This is roughly analogous to the
            "Tag" property found on many Microsoft controls.
            </remarks>
        </member>
        <member name="P:FM.WebSync.Core.Client.ConnectProxyUrl">
            <summary>
            Gets or sets the URL of the proxy to use for all connect requests. 
            </summary>
            <remarks>
            This overrides the default <see cref="P:FM.WebSync.Core.BaseClientArgs.RequestUrl"/> (specified when the client was created) for connect requests.
            </remarks>
        </member>
        <member name="P:FM.WebSync.Core.Client.DisconnectProxyUrl">
            <summary>
            Gets or sets the URL of the proxy to use for all disconnect requests.
            </summary>
            <remarks>
            This overrides the default <see cref="P:FM.WebSync.Core.BaseClientArgs.RequestUrl"/> (specified when the client was created) for disconnect requests.
            </remarks>
        </member>
        <member name="P:FM.WebSync.Core.Client.BindProxyUrl">
            <summary>
            Gets or sets the URL of the proxy to use for all bind requests. 
            </summary>
            <remarks>
            This overrides the default <see cref="P:FM.WebSync.Core.BaseClientArgs.RequestUrl"/> (specified when the client was created) for bind requests.
            </remarks>
        </member>
        <member name="P:FM.WebSync.Core.Client.UnbindProxyUrl">
            <summary>
            Gets or sets the URL of the proxy to use for all unbind requests. 
            </summary>
            <remarks>
            This overrides the default <see cref="P:FM.WebSync.Core.BaseClientArgs.RequestUrl"/> (specified when the client was created) for unbind requests.
            </remarks>
        </member>
        <member name="P:FM.WebSync.Core.Client.SubscribeProxyUrl">
            <summary>
            Gets or sets the URL of the proxy to use for all subscribe requests.
            </summary>
            <remarks>
            This overrides the default <see cref="P:FM.WebSync.Core.BaseClientArgs.RequestUrl"/> (specified when the client was created) for subscribe requests.
            </remarks>
        </member>
        <member name="P:FM.WebSync.Core.Client.UnsubscribeProxyUrl">
            <summary>
            Gets or sets the URL of the proxy to use for all unsubscribe requests.
            </summary>
            <remarks>
            This overrides the default <see cref="P:FM.WebSync.Core.BaseClientArgs.RequestUrl"/> (specified when the client was created) for unsubscribe requests.
            </remarks>
        </member>
        <member name="P:FM.WebSync.Core.Client.PublishProxyUrl">
            <summary>
            Gets or sets the URL of the proxy to use for all publish requests.
            </summary>
            <remarks>
            This overrides the default <see cref="P:FM.WebSync.Core.BaseClientArgs.RequestUrl"/> (specified when the client was created) for publish requests.
            </remarks>
        </member>
        <member name="P:FM.WebSync.Core.Client.StreamHttpTransfer">
            <summary>
            Gets or sets the HTTP transfer used to stream from the server.
            </summary>
        </member>
        <member name="E:FM.WebSync.Core.Client.OnBeforeConnect">
            <summary>
            Raised before a <see cref="T:FM.WebSync.Core.Client"/> connect request begins. This event is
            designed to support extensions by allowing modifications to be applied
            to a request before it is sent to the server.
            </summary>
            <parameter name="source" type="FM.WebSync.Core.Client">The client that fired the event</parameter>
            <parameter name="args" type="FM.WebSync.Core.BeforeConnectArgs">The <see cref="T:FM.WebSync.Core.BeforeConnectArgs"/> associated with the event.</parameter>
        </member>
        <member name="E:FM.WebSync.Core.Client.OnAfterConnect">
            <summary>
            Raised after a <see cref="T:FM.WebSync.Core.Client"/> connect response returns. This event is
            designed to support extensions by allowing modifications to be applied
            to a response after it is received from the server.
            </summary>
            <parameter name="source" type="FM.WebSync.Core.Client">The client that fired the event</parameter>
            <parameter name="args" type="FM.WebSync.Core.AfterConnectArgs">The <see cref="T:FM.WebSync.Core.AfterConnectArgs"/> associated with the event.</parameter>
        </member>
        <member name="E:FM.WebSync.Core.Client.OnBeforeDisconnect">
            <summary>
            Raised before a <see cref="T:FM.WebSync.Core.Client"/> disconnect request begins. This event is
            designed to support extensions by allowing modifications to be applied
            to a request before it is sent to the server.
            </summary>
            <parameter name="source" type="FM.WebSync.Core.Client">The client that fired the event</parameter>
            <parameter name="args" type="FM.WebSync.Core.BeforeDisconnectArgs">The <see cref="T:FM.WebSync.Core.BeforeDisconnectArgs"/> associated with the event.</parameter>
        </member>
        <member name="E:FM.WebSync.Core.Client.OnAfterDisconnect">
            <summary>
            Raised after a <see cref="T:FM.WebSync.Core.Client"/> disconnect response returns. This event is
            designed to support extensions by allowing modifications to be applied
            to a response after it is received from the server.
            </summary>
            <parameter name="source" type="FM.WebSync.Core.Client">The client that fired the event</parameter>
            <parameter name="args" type="FM.WebSync.Core.AfterDisconnectArgs">The <see cref="T:FM.WebSync.Core.AfterDisconnectArgs"/> associated with the event.</parameter>
        </member>
        <member name="E:FM.WebSync.Core.Client.OnBeforeBind">
            <summary>
            Raised before a <see cref="T:FM.WebSync.Core.Client"/> bind request begins. This event is
            designed to support extensions by allowing modifications to be applied
            to a request before it is sent to the server.
            </summary>
            <parameter name="source" type="FM.WebSync.Core.Client">The client that fired the event</parameter>
            <parameter name="args" type="FM.WebSync.Core.BeforeBindArgs">The <see cref="T:FM.WebSync.Core.BeforeBindArgs"/> associated with the event.</parameter>
        </member>
        <member name="E:FM.WebSync.Core.Client.OnAfterBind">
            <summary>
            Raised after a <see cref="T:FM.WebSync.Core.Client"/> bind response returns. This event is
            designed to support extensions by allowing modifications to be applied
            to a response after it is received from the server.
            </summary>
            <parameter name="source" type="FM.WebSync.Core.Client">The client that fired the event</parameter>
            <parameter name="args" type="FM.WebSync.Core.AfterBindArgs">The <see cref="T:FM.WebSync.Core.AfterBindArgs"/> associated with the event.</parameter>
        </member>
        <member name="E:FM.WebSync.Core.Client.OnBeforeUnbind">
            <summary>
            Raised before a <see cref="T:FM.WebSync.Core.Client"/> unbind request begins. This event is
            designed to support extensions by allowing modifications to be applied
            to a request before it is sent to the server.
            </summary>
            <parameter name="source" type="FM.WebSync.Core.Client">The client that fired the event</parameter>
            <parameter name="args" type="FM.WebSync.Core.BeforeUnbindArgs">The <see cref="T:FM.WebSync.Core.BeforeUnbindArgs"/> associated with the event.</parameter>
        </member>
        <member name="E:FM.WebSync.Core.Client.OnAfterUnbind">
            <summary>
            Raised after a <see cref="T:FM.WebSync.Core.Client"/> unbind response returns. This event is
            designed to support extensions by allowing modifications to be applied
            to a response after it is received from the server.
            </summary>
            <parameter name="source" type="FM.WebSync.Core.Client">The client that fired the event</parameter>
            <parameter name="args" type="FM.WebSync.Core.AfterUnbindArgs">The <see cref="T:FM.WebSync.Core.AfterUnbindArgs"/> associated with the event.</parameter>
        </member>
        <member name="E:FM.WebSync.Core.Client.OnBeforeSubscribe">
            <summary>
            Raised before a <see cref="T:FM.WebSync.Core.Client"/> subscribe request begins. This event is
            designed to support extensions by allowing modifications to be applied
            to a request before it is sent to the server.
            </summary>
            <parameter name="source" type="FM.WebSync.Core.Client">The client that fired the event</parameter>
            <parameter name="args" type="FM.WebSync.Core.BeforeSubscribeArgs">The <see cref="T:FM.WebSync.Core.BeforeSubscribeArgs"/> associated with the event.</parameter>
        </member>
        <member name="E:FM.WebSync.Core.Client.OnAfterSubscribe">
            <summary>
            Raised after a <see cref="T:FM.WebSync.Core.Client"/> subscribe response returns. This event is
            designed to support extensions by allowing modifications to be applied
            to a response after it is received from the server.
            </summary>
            <parameter name="source" type="FM.WebSync.Core.Client">The client that fired the event</parameter>
            <parameter name="args" type="FM.WebSync.Core.AfterSubscribeArgs">The <see cref="T:FM.WebSync.Core.AfterSubscribeArgs"/> associated with the event.</parameter>
        </member>
        <member name="E:FM.WebSync.Core.Client.OnBeforeUnsubscribe">
            <summary>
            Raised before a <see cref="T:FM.WebSync.Core.Client"/> unsubscribe request begins. This event is
            designed to support extensions by allowing modifications to be applied
            to a request before it is sent to the server.
            </summary>
            <parameter name="source" type="FM.WebSync.Core.Client">The client that fired the event</parameter>
            <parameter name="args" type="FM.WebSync.Core.BeforeUnsubscribeArgs">The <see cref="T:FM.WebSync.Core.BeforeUnsubscribeArgs"/> associated with the event.</parameter>
        </member>
        <member name="E:FM.WebSync.Core.Client.OnAfterUnsubscribe">
            <summary>
            Raised after a <see cref="T:FM.WebSync.Core.Client"/> unsubscribe response returns. This event is
            designed to support extensions by allowing modifications to be applied
            to a response after it is received from the server.
            </summary>
            <parameter name="source" type="FM.WebSync.Core.Client">The client that fired the event</parameter>
            <parameter name="args" type="FM.WebSync.Core.AfterUnsubscribeArgs">The <see cref="T:FM.WebSync.Core.AfterUnsubscribeArgs"/> associated with the event.</parameter>
        </member>
        <member name="E:FM.WebSync.Core.Client.OnBeforePublish">
            <summary>
            Raised before a <see cref="T:FM.WebSync.Core.Client"/> publish request begins. This event is
            designed to support extensions by allowing modifications to be applied
            to a request before it is sent to the server.
            </summary>
            <parameter name="source" type="FM.WebSync.Core.Client">The client that fired the event</parameter>
            <parameter name="args" type="FM.WebSync.Core.BeforePublishArgs">The <see cref="T:FM.WebSync.Core.BeforePublishArgs"/> associated with the event.</parameter>
        </member>
        <member name="E:FM.WebSync.Core.Client.OnAfterPublish">
            <summary>
            Raised after a <see cref="T:FM.WebSync.Core.Client"/> publish response returns. This event is
            designed to support extensions by allowing modifications to be applied
            to a response after it is received from the server.
            </summary>
            <parameter name="source" type="FM.WebSync.Core.Client">The client that fired the event</parameter>
            <parameter name="args" type="FM.WebSync.Core.AfterPublishArgs">The <see cref="T:FM.WebSync.Core.AfterPublishArgs"/> associated with the event.</parameter>
        </member>
        <member name="T:FM.WebSync.Core.SendState">
            <summary>
            The internal state of a request batch sent to the server.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SendState.Requests">
            <summary>
            Gets or sets the requests to be sent to the server.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SendState.RequestMapping">
            <summary>
            Gets or sets the mapping of request IDs to requests.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SendState.Stream">
            <summary>
            Gets or sets whether this is a streaming request.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.ClientRequest">
            <summary>
            Internal class used to hold details about a client request queued for
            delivery to the server.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientRequest.Message">
            <summary>
            Gets or sets the request the client wishes to send to the server.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientRequest.Callback">
            <summary>
            Gets or sets the callback to invoke after receiving a response from the server.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.ClientRequest.State">
            <summary>
            Gets or sets custom state information preserved through the request cycle.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.ClientState">
            <summary>
            The current state of a WebSync <see cref="T:FM.WebSync.Core.Client"/>.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.ClientState.Connected">
            <summary>
            Indicates that the client is connected.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.ClientState.Connecting">
            <summary>
            Indicates that the client is connecting.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.ClientState.Disconnected">
            <summary>
            Indicates that the client is disconnected.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.Constants">
            <summary>
            Constant values for WebSync <see cref="T:FM.WebSync.Core.Client">Clients</see> and
            <see cref="T:FM.WebSync.Core.Publisher">Publishers</see>.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.Constants.OnDemandRequestUrl">
            <summary>
            The WebSync On-Demand URL.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.Constants.OnDemandRequestUrlSsl">
            <summary>
            The WebSync On-Demand SSL URL.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.Constants.DefaultDomainKey">
            <summary>
            The default domain key for <see cref="T:FM.WebSync.Core.Client"/> and <see cref="T:FM.WebSync.Core.Publisher"/> requests.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.Constants.DefaultDomainName">
            <summary>
            The default domain name for <see cref="T:FM.WebSync.Core.Client"/> and <see cref="T:FM.WebSync.Core.Publisher"/> requests.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.Bayeux.Publication">
            <summary>
            Implementation of a Bayeux publication used for publisher requests and subsequent server responses.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Publication.ToJson">
            <summary>
            Serializes the publication to JSON.
            </summary>
            <returns>The publication in JSON-serialized format.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Publication.ToJson(FM.WebSync.Core.Bayeux.Publication)">
            <summary>
            Serializes a publication to JSON.
            </summary>
            <param name="publication">A publication to serialize.</param>
            <returns>The JSON-serialized publication.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Publication.FromJson(System.String)">
            <summary>
            Deserializes a publication from JSON.
            </summary>
            <param name="publicationJson">A JSON string to deserialize.</param>
            <returns>The deserialized publication.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Publication.ToJsonMultiple(FM.WebSync.Core.Bayeux.Publication[])">
            <summary>
            Serializes an array of publications to JSON.
            </summary>
            <param name="publications">An array of publications to serialize.</param>
            <returns>The JSON-serialized array of publications.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Publication.FromJsonMultiple(System.String)">
            <summary>
            Deserializes an array of publications from JSON.
            </summary>
            <param name="publicationsJson">A JSON string to deserialize.</param>
            <returns>The deserialized array of publications.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Publication.ToMessage(FM.WebSync.Core.Bayeux.Publication)">
            <summary>
            Converts a publication to its message equivalent.
            </summary>
            <param name="publication">The publication to convert.</param>
            <returns>The message equivalent.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Publication.FromMessage(FM.WebSync.Core.Bayeux.Message)">
            <summary>
            Converts a message to its publication equivalent.
            </summary>
            <param name="message">The message to convert.</param>
            <returns>The publication equivalent.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Publication.ToMessages(FM.WebSync.Core.Bayeux.Publication[])">
            <summary>
            Converts a list of publications to their message equivalents.
            </summary>
            <param name="publications">The publications to convert.</param>
            <returns>The message equivalents.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Publication.FromMessages(FM.WebSync.Core.Bayeux.Message[])">
            <summary>
            Converts a list of messages to their publication equivalents.
            </summary>
            <param name="messages">The messages to convert.</param>
            <returns>The publication equivalents</returns>
        </member>
        <member name="T:FM.WebSync.Core.Bayeux.Message">
            <summary>
            Implementation of a Bayeux message used for client requests and subsequent server responses.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Message.ToJson">
            <summary>
            Serializes the message to JSON.
            </summary>
            <returns>The message in JSON-serialized format.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Message.ToJson(FM.WebSync.Core.Bayeux.Message)">
            <summary>
            Serializes a message to JSON.
            </summary>
            <param name="message">The message to serialize.</param>
            <returns>The JSON-serialized message.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Message.FromJson(System.String)">
            <summary>
            Deserializes a message from JSON.
            </summary>
            <param name="messageJson">The JSON string to deserialize.</param>
            <returns>The deserialized message.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Message.ToJsonMultiple(FM.WebSync.Core.Bayeux.Message[])">
            <summary>
            Serializes an array of messages to JSON.
            </summary>
            <param name="messages">The array of messages to serialize.</param>
            <returns>The JSON-serialized array of messages.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Bayeux.Message.FromJsonMultiple(System.String)">
            <summary>
            Deserializes an array of messages from JSON.
            </summary>
            <param name="messagesJson">The JSON string to deserialize.</param>
            <returns>The deserialized array of messages.</returns>
        </member>
        <member name="P:FM.WebSync.Core.Bayeux.Message.Id">
            <summary>
            Gets or sets the unique message identifier, scoped to the client identifier.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Bayeux.Message.ClientId">
            <summary>
            Gets or sets the unique client identifier.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Bayeux.Message.Subscription">
            <summary>
            Gets or sets the channels to/from which the client should be subscribed/unsubscribed.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Bayeux.Message.Binding">
            <summary>
            Gets or sets the records to/from which the client should be bound/unbound.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Bayeux.Message.Version">
            <summary>
            Gets or sets the current server version.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Bayeux.Message.MinimumVersion">
            <summary>
            Gets or sets the minimum supported server version.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Bayeux.Message.SupportedConnectionTypes">
            <summary>
            Gets or sets the connection types supported by the server.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Bayeux.Message.ConnectionType">
            <summary>
            Gets or sets the type of connection the client is using.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Bayeux.Message.Advice">
            <summary>
            Gets or sets details on how the client should reconnect.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.PublishingClient">
            <summary>
            Details about the client publishing the data.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.PublishingClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.PublishingClient"/> class.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.PublishingClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.PublishingClient"/> class.
            </summary>
            <param name="id">The unique client identifier.</param>
        </member>
        <member name="M:FM.WebSync.Core.PublishingClient.#ctor(System.String,FM.WebSync.Core.BoundRecords)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.PublishingClient"/> class.
            </summary>
            <param name="id">The unique client identifier.</param>
            <param name="boundRecords">The records bound to the client.</param>
        </member>
        <member name="M:FM.WebSync.Core.PublishingClient.GetBoundRecord(System.String)">
            <summary>
            Gets a record from the publishing client's bound records.
            </summary>
            <param name="key">The key of the bound record.</param>
            <returns>The bound record.</returns>
        </member>
        <member name="M:FM.WebSync.Core.PublishingClient.GetBoundValueJson(System.String)">
            <summary>
            Gets a serialized value stored in the publishing client's bound records.
            </summary>
            <param name="key">The key of the bound record.</param>
            <returns>The value of the bound record (in JSON format).</returns>
        </member>
        <member name="M:FM.WebSync.Core.PublishingClient.GetBoundRecords">
            <summary>
            Returns a cloned copy of the <see cref="P:FM.WebSync.Core.PublishingClient.BoundRecords"/> collection.
            </summary>
            <returns>A cloned copy of the <see cref="P:FM.WebSync.Core.PublishingClient.BoundRecords"/>.</returns>
        </member>
        <member name="M:FM.WebSync.Core.PublishingClient.ToJson">
            <summary>
            Serializes this instance to JSON.
            </summary>
            <returns>The JSON-formatted subscribed client.</returns>
        </member>
        <member name="M:FM.WebSync.Core.PublishingClient.ToJson(FM.WebSync.Core.PublishingClient)">
            <summary>
            Serializes a publishing client to JSON.
            </summary>
            <param name="publishingClient">The publishing client to serialize.</param>
            <returns>The JSON-formatted publishing client.</returns>
        </member>
        <member name="M:FM.WebSync.Core.PublishingClient.FromJson(System.String)">
            <summary>
            Deserializes a JSON-formatted publishing client.
            </summary>
            <param name="publishingClientJson">The JSON-formatted publishing client to deserialize.</param>
            <returns>The publishing client.</returns>
        </member>
        <member name="P:FM.WebSync.Core.PublishingClient.Id">
            <summary>
            Gets or sets the publishing client's unique identifier.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublishingClient.BoundRecords">
            <summary>
            Gets or sets the publishing client's locally-cached bound records.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.HttpWebRequestTransfer">
            <summary>
            Defines methods for transferring content over HTTP using the HttpWebRequest.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.HttpTransfer">
            <summary>
            Base class that defines methods for transferring content over HTTP.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.HttpTransfer.Started">
            <summary>
            Total HTTP transfers started.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.HttpTransfer.Finished">
            <summary>
            Total HTTP transfers finished.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.HttpTransfer.SendContent(FM.WebSync.Core.SendContentArgs)">
            <summary>
            Sends content over HTTP.
            </summary>
            <param name="args">The send arguments.
            See <see cref="T:FM.WebSync.Core.SendContentArgs"/> for details.</param>
        </member>
        <member name="M:FM.WebSync.Core.HttpTransfer.Respond(FM.WebSync.Core.SendContentArgs,FM.WebSync.Core.ReceiveContentArgs)">
            <summary>
            Processes the response and executes <see cref="P:FM.WebSync.Core.SendContentArgs.Callback"/>.
            </summary>
            <param name="sargs">The original send arguments.
            See <see cref="T:FM.WebSync.Core.SendContentArgs"/> for details.</param>
            <param name="rargs">The receive arguments.
            See <see cref="T:FM.WebSync.Core.ReceiveContentArgs"/> for details.</param>
        </member>
        <member name="M:FM.WebSync.Core.HttpWebRequestTransfer.SendContent(FM.WebSync.Core.SendContentArgs)">
            <summary>
            Sends content over HTTP.
            </summary>
            <param name="args">The send configuration.
            See <see cref="T:FM.WebSync.Core.SendContentArgs"/> for details.</param>
        </member>
        <member name="T:FM.WebSync.Core.MessageType">
            <summary>
            Possible message types for <see cref="T:FM.WebSync.Core.Message">Messages</see>.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.MessageType.Connect">
            <summary>
            Message is a connect request/response.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.MessageType.Disconnect">
            <summary>
            Message is a disconnect request/response.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.MessageType.Bind">
            <summary>
            Messages is a bind request/response.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.MessageType.Unbind">
            <summary>
            Messages is an unbind request/response.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.MessageType.Subscribe">
            <summary>
            Message is a subscribe request/response.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.MessageType.Unsubscribe">
            <summary>
            Message is an unsubscribe request/response.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.MessageType.Publish">
            <summary>
            Message is a publish request/response.
            </summary>
        </member>
        <member name="F:FM.WebSync.Core.MessageType.Unknown">
            <summary>
            Message does not match any known types.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.Error">
            <summary>
            The standard error response returned from failed proxying attempts.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.Error.ToJson">
            <summary>
            Serializes the error to JSON.
            </summary>
            <returns>The serialized error.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Error.ToJson(FM.WebSync.Core.Error)">
            <summary>
            Serializes a single error to JSON.
            </summary>
            <param name="error">The error to serialize.</param>
            <returns>The serialized error.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Error.FromJson(System.String)">
            <summary>
            Deserializes a single error from JSON.
            </summary>
            <param name="errorJson">The JSON error to deserialize.</param>
            <returns>The deserialized error.</returns>
        </member>
        <member name="P:FM.WebSync.Core.Error.Message">
            <summary>
            Gets or sets the error message.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.Extensions">
            <summary>
            The extensions library that wraps the Bayeux Ext field, used with instances of classes
            that derive from <see cref="T:FM.WebSync.Core.Extensible"/>.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.Extensions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.Extensions"/> class.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.Extensions.GetValueJson(System.String)">
            <summary>
            Gets a serialized value stored in the extensions.
            </summary>
            <param name="name">Fully-qualified extension name.</param>
            <returns>The extension value (in JSON format).</returns>
        </member>
        <member name="M:FM.WebSync.Core.Extensions.SetValueJson(System.String,System.String)">
            <summary>
            Stores a serialized value in the extensions.  Must be valid JSON.
            </summary>
            <param name="name">Fully-qualified extension name.</param>
            <param name="valueJson">The extension value in valid JSON format.</param>
        </member>
        <member name="M:FM.WebSync.Core.Extensions.TrySetValueJson(System.String,System.String)">
            <summary>
            Stores a serialized value in the extensions.  Must be valid JSON.
            </summary>
            <param name="name">Fully-qualified extension name.</param>
            <param name="valueJson">The extension value in valid JSON format.</param>
            <returns><c>true</c> if the value was stored; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Extensions.ToJson">
            <summary>
            Serializes the extensions library to JSON.
            </summary>
            <returns>The serialized extensions library.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Extensions.ToJson(FM.WebSync.Core.Extensions)">
            <summary>
            Serializes a single extensions library to JSON.
            </summary>
            <param name="extensions">The extensions library to serialize.</param>
            <returns>The serialized extensions library.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Extensions.FromJson(System.String)">
            <summary>
            Deserializes a single extensions library from JSON.
            </summary>
            <param name="extensionsJson">The JSON extensions library to deserialize.</param>
            <returns>The deserialized extensions library.</returns>
        </member>
        <member name="P:FM.WebSync.Core.Extensions.Count">
            <summary>
            Gets the number of extensions in the library.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Extensions.Names">
            <summary>
            Gets the names of the extensions in the library.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.JsonChecker">
            <summary>
            JsonChecker is a Pushdown Automaton that very quickly determines if a 
            JSON text is syntactically correct. It could be used to filter inputs 
            to a system, or to verify that the outputs of a system are 
            syntactically correct.
            </summary>
            <remarks>
            This implementation is a C# port of the original 
            <a href="http://www.json.org/JSON_checker/">JSON_checker</a> program 
            written in C.
            </remarks>
        </member>
        <member name="M:FM.WebSync.Core.JsonChecker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.JsonChecker"/> class.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.JsonChecker.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.JsonChecker"/> class.
            </summary>
            <param name="depth">The maximum depth to recurse.</param>
        </member>
        <member name="M:FM.WebSync.Core.JsonChecker.Check(System.String)">
            <summary>
            Checks if the specified string is valid JSON.
            </summary>
            <param name="str">The string to check.</param>
            <returns></returns>
        </member>
        <member name="T:FM.WebSync.Core.Message">
            <summary>
            The WebSync message used for all <see cref="T:FM.WebSync.Core.Client"/> requests/responses.
            </summary>
            <remarks>
            For all messages except publishes, the <see cref="P:FM.WebSync.Core.BaseMessage.Channel"/> property
            will be set to a Bayeux meta-channel (e.g. /meta/subscribe), which
            indicates that the type of request. For subscribe and unsubscribe requests,
            the channel list is stored in the in the <see cref="P:FM.WebSync.Core.Message.Subscription"/> array.
            </remarks>
        </member>
        <member name="M:FM.WebSync.Core.Message.IsSubscribingTo(System.String)">
            <summary>
            Determines whether or not the current message represents a subscribe
            request/response for a particular channel.
            </summary>
            <param name="channel">The channel to test.</param>
            <returns><c>true</c> if the message represents a subscribe request/response
            for the specified channel; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Message.IsUnsubscribingFrom(System.String)">
            <summary>
            Determines whether or not the current message represents an unsubscribe
            request/response for a particular channel.
            </summary>
            <param name="channel">The channel to test.</param>
            <returns><c>true</c> if the message represents an unsubscribe request/response
            for the specified channel; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Message.IsConnect">
            <summary>
            Detects whether this is a connect request/response.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Core.Message.IsDisconnect">
            <summary>
            Detects whether this is a disconnect request/response.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Core.Message.IsBind">
            <summary>
            Detects whether this is a bind request/response.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Core.Message.IsUnbind">
            <summary>
            Detects whether this is a bind request/response.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Core.Message.IsSubscribe">
            <summary>
            Detects whether this is a subscribe request/response.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Core.Message.IsUnsubscribe">
            <summary>
            Detects whether this is an unsubscribe request/response.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Core.Message.IsPublish">
            <summary>
            Detects whether this is a publish request/response.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Core.Message.ToJson">
            <summary>
            Serializes the message to JSON.
            </summary>
            <returns>The message in JSON-serialized format.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Message.ToJson(FM.WebSync.Core.Message)">
            <summary>
            Serializes a message to JSON.
            </summary>
            <param name="message">A message to serialize.</param>
            <returns>A JSON-serialized message.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Message.FromJson(System.String)">
            <summary>
            Deserializes a message from JSON.
            </summary>
            <param name="messageJson">A JSON string to deserialize.</param>
            <returns>A deserialized message.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Message.ToJsonMultiple(FM.WebSync.Core.Message[])">
            <summary>
            Serializes a list of messages to JSON.
            </summary>
            <param name="messages">A list of messages to serialize.</param>
            <returns>A JSON-serialized array of messages.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Message.FromJsonMultiple(System.String)">
            <summary>
            Deserializes a list of messages from JSON.
            </summary>
            <param name="messageJsons">A JSON string to deserialize.</param>
            <returns>A deserialized list of messages.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Message.ToBayeux(FM.WebSync.Core.Message)">
            <summary>
            Converts a standard message into a Bayeux-compatible message.
            </summary>
            <param name="message">A standard message.</param>
            <returns>A Bayeux-compatible message.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Message.FromBayeux(FM.WebSync.Core.Bayeux.Message)">
            <summary>
            Converts a Bayeux-compatible message into a standard message.
            </summary>
            <param name="bayeuxMessage">A Bayeux-compatible message.</param>
            <returns>A standard message.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Message.ToBayeuxMultiple(FM.WebSync.Core.Message[])">
            <summary>
            Converts a list of standard messages into a list of Bayeux-compatible messages.
            </summary>
            <param name="messages">A list of standard messages</param>
            <returns>A list of Bayeux-compatible messages.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Message.FromBayeuxMultiple(FM.WebSync.Core.Bayeux.Message[])">
            <summary>
            Converts a list of Bayeux-compatible messages into a list of standard messages.
            </summary>
            <param name="bayeuxMessages">A list of Bayeux-compatible messages.</param>
            <returns>A list of standard messages.</returns>
        </member>
        <member name="P:FM.WebSync.Core.Message.Id">
            <summary>
            Gets or sets the unique message identifier.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Message.ClientId">
            <summary>
            Gets or sets the unique identifier of the client associated with the request/response.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Message.Subscription">
            <summary>
            Gets or sets the channels being subscribed or unsubscribed.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Message.Binding">
            <summary>
            Gets or sets the records being bound or unbound.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Message.Type">
            <summary>
            Gets or sets the type of the message.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Message.Advice">
            <summary>
            Gets or sets details on how the client should reconnect.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Message.ConnectionType">
            <summary>
            Gets or sets the type of connection the client is using.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Message.MinimumVersion">
            <summary>
            Gets or sets the minimum supported server version.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Message.SupportedConnectionTypes">
            <summary>
            Gets or sets the connection types supported by the server.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Message.Version">
            <summary>
            Gets or sets the current server version.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.Proxy">
            <summary>
            <para>
            The WebSync proxy, used for intercepting client requests/responses and
            processing them en-route to/from the server.
            </para>
            </summary>
            <remarks>
            <para>
            Proxies are used to intercept and pre/post-process message traffic for a WebSync
            server. For WebSync On-Demand, proxies are the recommended option for server-side
            processing of any kind. For WebSync Server, proxies are recommended when
            server-side message processing must be segregated from the server nodes.
            </para>
            <para>
            To set up a proxy, you need to start with an HTTP endpoint, like an HTTP handler
            class that implements IHttpHandler or IHttpAsyncHandler. Then, simply call
            <see cref="M:FM.WebSync.Core.Proxy.Invoke(FM.WebSync.Core.ProxyInvokeArgs)"/> with your desired configuration options.
            </para>
            <para>
            In order for anything to happen, the clients and/or publishers must specify the
            URL to the proxy when calling a method that requires proxying. See the
            "RequestUrl" property of each method call's arguments for details.
            </para>
            <para>
            Here's a simple contrived example of how to use a proxy in C#. Remember to add an
            entry to your web.config with the URL for this custom HTTP handler.
            </para>
            <example>
            <code>
            using System;
            using System.Linq;
            using FM.WebSync.Core;
            using System.Runtime.Serialization;
            
            namespace FM.WebSync.Documentation
            {
                public class MyProxy : IHttpHandler
                {
                    public void ProcessRequest(HttpContext context)
                    {
                        Proxy.Invoke(new ProxyInvokeArgs
                        {
                            RequestUrl = "http://localhost/request.ashx",
                            OnBeforeProxy = (args) =&gt;
                            {
                                foreach (Message m in args.Messages)
                                {
                                    // verify authentication for this channel
                                    if (m.IsSubscribe() &amp;&amp; m.IsSubscribingTo("/example/secure")
                                        &amp;&amp; !args.HttpContext.Request.IsAuthenticated)
                                    {
                                        m.Successful = false;
                                        m.Error = "You must be authenticated before you can subscribe to /example/secure.";
                                    }
                                }
                            },
                            OnAfterProxy = (args) =&gt;
                            {
                                foreach (Message m in args.Messages)
                                {
                                    if (m.Successful == true)
                                    {
                                        Log.Debug("The request with ID " + m.Id + " was proxied and succeeded.");
                                    }
                                    else
                                    {
                                        Log.Debug("The request with ID " + m.Id + " was proxied but failed. " + m.Error);
                                    }
                                }
                            },
                            OnProxy = (args) =&gt;
                            {
                                // turn on keep-alive, just to demonstrate
                                // modifying the outgoing request
                                args.ServerRequest.KeepAlive = true;
                            }
                        });
                    }
                    
                    public bool IsReusable { get { return true; } }
                }
            }
            </code>
            </example>
            <para>
            For WebSync On-Demand, it is not necessary to specify
            <see cref="P:FM.WebSync.Core.ProxyInvokeArgs.RequestUrl"/>, as it will default to the WebSync
            On-Demand URL. However, <see cref="P:FM.WebSync.Core.ProxyInvokeArgs.DomainKey"/> can be specified
            to change the key for the incoming request to the private key for your
            domain, depending on your configuration in the Frozen Mountain Portal.
            </para>
            </remarks>
        </member>
        <member name="M:FM.WebSync.Core.Proxy.Invoke">
            <summary>
            Proxies requests to a WebSync server using default values.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.Proxy.Invoke(FM.WebSync.Core.ProxyInvokeArgs)">
            <summary>
            Proxies requests to a WebSync server.
            </summary>
            <remarks>
            <para>
            After the incoming requests have been received from the client, but
            before they are proxied to the server, the callback specified by
            <see cref="P:FM.WebSync.Core.ProxyInvokeArgs.OnBeforeProxy"/> is invoked to allow pre-processing.
            </para>
            <para>
            After the incoming responses have been received from the server, but before they
            are proxied back to the client, the callback specified by
            <see cref="P:FM.WebSync.Core.ProxyInvokeArgs.OnAfterProxy"/> is invoked to allow post-processing.
            </para>
            <para>
            One additional event allows modification of the outgoing HTTP request transporting
            the WebSync requests to the server. The callback specified by 
            <see cref="P:FM.WebSync.Core.ProxyInvokeArgs.OnProxy"/> is invoked immediately before the outgoing
            HTTP request is sent, allowing modification to cookies, headers, etc.
            </para>
            </remarks>
            <param name="args">The proxy invocation arguments.
            See <see cref="T:FM.WebSync.Core.ProxyInvokeArgs"/> for more details.</param>
        </member>
        <member name="T:FM.WebSync.Core.Publication">
            <summary>
            The WebSync publication used for all <see cref="T:FM.WebSync.Core.Publisher"/> requests/responses.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.Publication.ToJson">
            <summary>
            Serializes the publication to JSON.
            </summary>
            <returns>The publication in JSON-serialized format.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Publication.ToJson(FM.WebSync.Core.Publication)">
            <summary>
            Serializes a publication to JSON.
            </summary>
            <param name="publication">A publication to serialize.</param>
            <returns>A JSON-serialized publication.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Publication.FromJson(System.String)">
            <summary>
            Deserializes a publication from JSON.
            </summary>
            <param name="publicationJson">A JSON string to deserialize.</param>
            <returns>A deserialized publication.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Publication.ToJsonMultiple(FM.WebSync.Core.Publication[])">
            <summary>
            Serializes a list of publications to JSON.
            </summary>
            <param name="publications">A list of publications to serialize.</param>
            <returns>A JSON-serialized array of publications.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Publication.FromJsonMultiple(System.String)">
            <summary>
            Deserializes a list of publications from JSON.
            </summary>
            <param name="publicationJsons">A JSON string to deserialize.</param>
            <returns>A deserialized list of publications.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Publication.ToBayeux(FM.WebSync.Core.Publication)">
            <summary>
            Converts a standard publication into a Bayeux-compatible publication.
            </summary>
            <param name="publication">A standard publication.</param>
            <returns>A Bayeux-compatible publication.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Publication.FromBayeux(FM.WebSync.Core.Bayeux.Publication)">
            <summary>
            Converts a Bayeux-compatible publication into a standard publication.
            </summary>
            <param name="bayeuxPublication">A Bayeux-compatible publication.</param>
            <returns>A standard publication.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Publication.ToBayeuxMultiple(FM.WebSync.Core.Publication[])">
            <summary>
            Converts a list of standard publications into a list of Bayeux-compatible publications.
            </summary>
            <param name="publications">A list of standard publications</param>
            <returns>A list of Bayeux-compatible publications.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Publication.FromBayeuxMultiple(FM.WebSync.Core.Bayeux.Publication[])">
            <summary>
            Converts a list of Bayeux-compatible publications into a list of standard publications.
            </summary>
            <param name="bayeuxPublications">A list of Bayeux-compatible publications.</param>
            <returns>A list of standard publications.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Publication.ToMessage(FM.WebSync.Core.Publication)">
            <summary>
            Converts a publication to its message equivalent.
            </summary>
            <param name="publication">The publication to convert.</param>
            <returns>The message equivalent.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Publication.FromMessage(FM.WebSync.Core.Message)">
            <summary>
            Converts a message to its publication equivalent.
            </summary>
            <param name="message">The message to convert.</param>
            <returns>The publication equivalent.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Publication.ToMessages(FM.WebSync.Core.Publication[])">
            <summary>
            Converts a list of publications to their message equivalents.
            </summary>
            <param name="publications">The publications to convert.</param>
            <returns>The message equivalents.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Publication.FromMessages(FM.WebSync.Core.Message[])">
            <summary>
            Converts a list of messages to their publication equivalents.
            </summary>
            <param name="messages">The messages to convert.</param>
            <returns>The publication equivalents</returns>
        </member>
        <member name="T:FM.WebSync.Core.PublishOutput">
            <summary>
            Internal class used hold data about an active publication request.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublishOutput.PublishedPublication">
            <summary>
            Gets or sets the returned publication from the server.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublishOutput.Exception">
            <summary>
            Gets or sets an exception generated by the request.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.PublishCallback">
            <summary>
            Internal class used to avoid closures for an active publication request.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublishCallback.PublishOutput">
            <summary>
            Gets or sets the object containing references to the response received
            from the server.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.PublishMultipleOutput">
            <summary>
            Internal class used hold data about an active publications request.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublishMultipleOutput.PublishedPublications">
            <summary>
            Gets or sets the returned publications from the server.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublishMultipleOutput.Exception">
            <summary>
            Gets or sets an exception generated by the request.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.PublishMultipleCallback">
            <summary>
            Internal class used to avoid closures for an active publications request.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.PublishMultipleCallback.PublishMultipleOutput">
            <summary>
            Gets or sets the object containing references to the response received
            from the server.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.Publisher">
            <summary>
            <para>
            The WebSync publisher, used for publishing data rapidly and efficiently.
            </para>
            </summary>
            <remarks>
            <para>
            When developing real-time applications, it is often most efficient and secure to
            publish data from a server, a web service, or in general, a source that doesn't
            require the ability to subscribe to channels.  The <see cref="T:FM.WebSync.Core.Publisher"/> is 
            designed to do just that.
            </para>
            <para>
            When using WebSync Server, set the <see cref="P:FM.WebSync.Core.BaseClientArgs.RequestUrl"/>.
            When using WebSync On-Demand, set the <see cref="P:FM.WebSync.Core.PublisherArgs.DomainKey"/> to your
            public API key and the <see cref="P:FM.WebSync.Core.BaseClientArgs.DomainName"/> to your domain.
            </para>
            <para>
            A common use case for the <see cref="T:FM.WebSync.Core.Publisher"/> is to send out data as it
            arrives from a real-time feed (e.g. stock data, sports scores, news articles, etc.).
            Wherever the feed is located, the <see cref="T:FM.WebSync.Core.Publisher"/> can be used to send
            out the data rapidly to any subscribed clients.
            </para>
            <para>
            For WebSync Server, make sure httpDirectPublish is enabled in web.config.
            </para>
            <example>
            <para>
            Here's a simple example of how to create a publisher in C# and publish some data.
            </para>
            <code>
            using System;
            using System.Linq;
            using FM.WebSync.Core;
            using System.Runtime.Serialization;
            
            namespace FM.WebSync.Documentation
            {
                class Program
                {
                    [DataContract]
                    private class Payload
                    {
                        [DataMember(Name = "text")]
                        public string Text { get; set; }
            
                        [DataMember(Name = "time")]
                        public DateTime Time { get; set; }
                    }
            
                    static void Main(string[] args)
                    {
                        Publisher publisher = new Publisher(new PublisherArgs()
                        {
                            RequestUrl = "http://localhost/request.ashx"
                        });
                        
                        // serialize to JSON
                        string payloadJson = JSON.Serialize(new Payload
                        {
                            Text = "Hello, world!",
                            Time = DateTime.Now
                        });
                        publisher.Publish(new Publication()
                        {
                            Channel = "/example",
                            DataJson = payloadJson
                        });
                    }
                }
            }
            </code>
            </example>
            <para>
            There are multiple overloads for the "Publish" method. For batch
            publications, use the overloads that take a collection of
            <see cref="T:FM.WebSync.Core.Publication">Publications</see>. They will be automatically batched and
            delivered in a single round-trip.
            </para>
            </remarks>
        </member>
        <member name="M:FM.WebSync.Core.Publisher.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.Publisher"/> class with default values.
            Use the publisher if you just need to publish data.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.Publisher.#ctor(FM.WebSync.Core.PublisherArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.Publisher"/> class according to the
            specified arguments. Use the publisher if you just need to publish data.
            </summary>
            <param name="publisherArgs">The publisher configuration.
            See <see cref="T:FM.WebSync.Core.PublisherArgs"/> for details.</param>
        </member>
        <member name="M:FM.WebSync.Core.Publisher.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.Publisher"/> class with the specified
            request URL and otherwise default values. Use the publisher if you just need to
            publish data.
            </summary>
            <param name="requestUrl">The WebSync request URL. By default, WebSync uses URLs that end with request.ashx.</param>
        </member>
        <member name="M:FM.WebSync.Core.Publisher.QuickPublish(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:FM.WebSync.Core.Publisher"/> using default values and synchronously
            sends a single publication.
            </summary>
            <remarks>
            This method always executes synchronously and returns the
            <see cref="T:FM.WebSync.Core.Publication"/> it automatically creates.
            </remarks>
            <param name="channel">The channel to which the data should be published.</param>
            <param name="dataJson">The data to publish.  Must be valid JSON.</param>
            <returns>The sent publication.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Publisher.QuickPublish(FM.WebSync.Core.Publication)">
            <summary>
            Creates a new <see cref="T:FM.WebSync.Core.Publisher"/> using default values and synchronously
            sends a single publication.
            </summary>
            <remarks>
            This method always executes synchronously and returns the
            <see cref="T:FM.WebSync.Core.Publication"/> it sends.
            </remarks>
            <param name="publication">The publication to deliver.</param>
            <returns>The sent publication.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Publisher.QuickPublish(FM.WebSync.Core.Publication[])">
            <summary>
            Creates a new <see cref="T:FM.WebSync.Core.Publisher"/> using default values and synchronously
            sends an array of publications.
            </summary>
            <remarks>
            This method always executes synchronously and returns the
            <see cref="T:FM.WebSync.Core.Publication">Publications</see> it sends.
            </remarks>
            <param name="publications">The publications to deliver.</param>
            <returns>The sent publications.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Publisher.QuickPublish(System.String,System.String,FM.WebSync.Core.PublisherArgs)">
            <summary>
            Creates a new <see cref="T:FM.WebSync.Core.Publisher"/> and synchronously sends a
            single publication.
            </summary>
            <remarks>
            This method always executes synchronously and returns the
            <see cref="T:FM.WebSync.Core.Publication"/> it automatically creates.
            </remarks>
            <param name="channel">The channel to which the data should be published.</param>
            <param name="dataJson">The data to publish.  Must be valid JSON.</param>
            <param name="args">The publisher configuration.</param>
            <returns>The sent publication.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Publisher.QuickPublish(FM.WebSync.Core.Publication,FM.WebSync.Core.PublisherArgs)">
            <summary>
            Creates a new <see cref="T:FM.WebSync.Core.Publisher"/> and synchronously sends a
            single publication.
            </summary>
            <remarks>
            This method always executes synchronously and returns the
            <see cref="T:FM.WebSync.Core.Publication"/> it sends.
            </remarks>
            <param name="publication">The publication to deliver.</param>
            <param name="args">The publisher configuration.</param>
            <returns>The sent publication.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Publisher.QuickPublish(FM.WebSync.Core.Publication[],FM.WebSync.Core.PublisherArgs)">
            <summary>
            Creates a new <see cref="T:FM.WebSync.Core.Publisher"/> and synchronously sends an
            array of publications.
            </summary>
            <remarks>
            This method always executes synchronously and returns the
            <see cref="T:FM.WebSync.Core.Publication">Publications</see> it sends.
            </remarks>
            <param name="publications">The publications to deliver.</param>
            <param name="args">The publisher configuration.</param>
            <returns>The sent publications.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Publisher.Publish(System.String,System.String)">
            <summary>
            Synchronously sends a single publication.
            </summary>
            <remarks>
            This method always executes synchronously and returns the
            <see cref="T:FM.WebSync.Core.Publication"/> it automatically creates.
            </remarks>
            <param name="channel">The channel to which the data should be published.</param>
            <param name="dataJson">The data to publish.  Must be valid JSON.</param>
            <returns>The sent publication.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Publisher.Publish(FM.WebSync.Core.Publication)">
            <summary>
            Synchronously sends a single publication.
            </summary>
            <remarks>
            This method always executes synchronously and returns the
            <see cref="T:FM.WebSync.Core.Publication"/> it sends.
            </remarks>
            <param name="publication">The publication to deliver.</param>
            <returns>The sent publication.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Publisher.Publish(FM.WebSync.Core.Publication[])">
            <summary>
            Synchronously sends an array of publications.
            </summary>
            <remarks>
            This method always executes synchronously and returns the
            <see cref="T:FM.WebSync.Core.Publication">Publications</see> it sends.
            </remarks>
            <param name="publications">The publications to deliver.</param>
            <returns>The sent publications.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Publisher.Publish(FM.WebSync.Core.PublicationArgs)">
            <summary>
            Publishes one or more publications.
            </summary>
            <remarks>
            When the publish completes, the callback specified by
            <see cref="P:FM.WebSync.Core.PublicationArgs.OnComplete"/> will be invoked, passing in the
            published <see cref="T:FM.WebSync.Core.Publication">Publication(s)</see>, <b>including any
            modifications made on the server</b>.
            <example>
            <code>
            publisher.Publish(new PublicationArgs
            {
                Publication = new Publication
                {
                    Channel = "/example",
                    DataJson = "{\"text\":\"Hello, world!\"}"
                },
                OnComplete = (args) =&gt;
                {
                    // args.Publication could also be used here
                    foreach (Publication publication in args.Publications)
                    {
                        if (args.Publication.Successful == true)
                        {
                            Console.WriteLine("Published data to " + args.Channel + ".");
                        }
                        else
                        {
                            Console.WriteLine("Could not publish. " + args.Error);
                        }
                    }
                },
                OnException = (args) =&gt;
                {
                    Console.WriteLine("Could not publish. " + args.Exception.Message);
                }
            });
            </code>
            </example>
            </remarks>
            <param name="publicationArgs">The publication arguments.
            See <see cref="T:FM.WebSync.Core.PublicationArgs"/> for more details.</param>
            <returns>The publisher.</returns>
        </member>
        <member name="P:FM.WebSync.Core.Publisher.DomainKey">
            <summary>
            Gets or sets the domain key to send with each request. If using WebSync On-Demand,
            this should be set to the public or private API key specified in the Frozen
            Mountain Portal. If using WebSync Server, this should be used only if grouping
            connections.
            </summary>
        </member>
        <member name="E:FM.WebSync.Core.Publisher.OnBeforePublication">
            <summary>
            Raised before a <see cref="T:FM.WebSync.Core.Publisher"/> publish request begins. This event is
            designed to support extensions by allowing modifications to be applied
            to a request before it is sent to the server.
            </summary>
        </member>
        <member name="E:FM.WebSync.Core.Publisher.OnAfterPublication">
            <summary>
            Raised after a <see cref="T:FM.WebSync.Core.Publisher"/> publish response returns. This event is
            designed to support extensions by allowing modifications to be applied
            to a response after it is received from the server.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.Record">
            <summary>
            A record used for binding data to clients.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.Record.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.Record"/> class.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.Record.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.Record"/> class.
            </summary>
            <param name="key">The record key used to locate the value.</param>
        </member>
        <member name="M:FM.WebSync.Core.Record.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.Record"/> class.
            </summary>
            <param name="key">The record key used to locate the value.</param>
            <param name="valueJson">The record value.  This must be valid JSON.</param>
        </member>
        <member name="M:FM.WebSync.Core.Record.#ctor(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.Record"/> class.
            </summary>
            <param name="key">The record key used to locate the value.</param>
            <param name="valueJson">The record value.  This must be valid JSON.</param>
            <param name="priv">Whether the record is (to be) private.</param>
        </member>
        <member name="M:FM.WebSync.Core.Record.ToJson">
            <summary>
            Serializes the record to JSON.
            </summary>
            <returns>The record in JSON-serialized format.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Record.ToJson(FM.WebSync.Core.Record)">
            <summary>
            Serializes a record to JSON.
            </summary>
            <param name="record">A record to serialize.</param>
            <returns>A JSON-serialized record.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Record.FromJson(System.String)">
            <summary>
            Deserializes a record from JSON.
            </summary>
            <param name="recordJson">A JSON string to deserialize.</param>
            <returns>A deserialized record.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Record.ToJsonMultiple(FM.WebSync.Core.Record[])">
            <summary>
            Serializes a list of records to JSON.
            </summary>
            <param name="records">A list of records to serialize.</param>
            <returns>A JSON-serialized array of records.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Record.FromJsonMultiple(System.String)">
            <summary>
            Deserializes a list of records from JSON.
            </summary>
            <param name="recordJsons">A JSON string to deserialize.</param>
            <returns>A deserialized list of records.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Record.ToBayeux(FM.WebSync.Core.Record)">
            <summary>
            Converts a standard record into a Bayeux-compatible record.
            </summary>
            <param name="record">A standard record.</param>
            <returns>A Bayeux-compatible record.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Record.FromBayeux(FM.WebSync.Core.Bayeux.Record)">
            <summary>
            Converts a Bayeux-compatible record into a standard record.
            </summary>
            <param name="bayeuxRecord">A Bayeux-compatible record.</param>
            <returns>A standard record.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Record.ToBayeuxMultiple(FM.WebSync.Core.Record[])">
            <summary>
            Converts a list of standard records into a list of Bayeux-compatible records.
            </summary>
            <param name="records">A list of standard records</param>
            <returns>A list of Bayeux-compatible records.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Record.FromBayeuxMultiple(FM.WebSync.Core.Bayeux.Record[])">
            <summary>
            Converts a list of Bayeux-compatible records into a list of standard records.
            </summary>
            <param name="bayeuxRecords">A list of Bayeux-compatible records.</param>
            <returns>A list of standard records.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Record.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:FM.WebSync.Core.Record.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to this instance.
            </summary>
            <param name="obj">The object to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified object is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:FM.WebSync.Core.Record.op_Equality(FM.WebSync.Core.Record,FM.WebSync.Core.Record)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="r1">The first record.</param>
            <param name="r2">The second record.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Record.op_Inequality(FM.WebSync.Core.Record,FM.WebSync.Core.Record)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="r1">The first record.</param>
            <param name="r2">The second record.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="P:FM.WebSync.Core.Record.Key">
            <summary>
            Gets or sets the record key used to locate the value.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Record.Private">
            <summary>
            Gets or sets the flag that indicates whether or not the record is (to be) hidden from other
            clients. If <c>true</c>, the record will only be visible to the binding client
            and the server. If <c>false</c> or <c>null</c>, the record will be publicly
            visible to other clients. Defaults to <c>null</c>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.Record.ValueJson">
            <summary>
            Gets or sets the record value.  This must be valid JSON.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.Serializer.SerializeBoundRecords(FM.WebSync.Core.BoundRecords)">
            <summary>
            Serializes a bound records hashtable to JSON.
            </summary>
            <param name="boundRecords">The bound records hashtable to serialize.</param>
            <returns>The serialized bound records hashtable.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Serializer.DeserializeBoundRecords(System.String)">
            <summary>
            Deserializes a bound records hashtable from JSON.
            </summary>
            <param name="boundRecordsJson">The bound records hashtable (in JSON) to deserialize.</param>
            <returns>The deserialized bound records hashtable.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Serializer.SerializeSubscribedClient(FM.WebSync.Core.SubscribedClient)">
            <summary>
            Serializes a subscribed client to JSON.
            </summary>
            <param name="subscribedClient">The subscribed client to serialize.</param>
            <returns>The serialized subscribed client.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Serializer.DeserializeSubscribedClient(System.String)">
            <summary>
            Deserializes a subscribed client from JSON.
            </summary>
            <param name="subscribedClientJson">The subscribed client (in JSON) to deserialize.</param>
            <returns>The deserialized subscribed client.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Serializer.SerializeSubscribedClientArray(FM.WebSync.Core.SubscribedClient[])">
            <summary>
            Serializes an array of subscribed client objects to JSON.
            </summary>
            <param name="subscribedClients">The subscribed client objects to serialize.</param>
            <returns>The subscribed client objects as a JSON array.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Serializer.DeserializeSubscribedClientArray(System.String)">
            <summary>
            Deserializes the subscribed client objects from JSON.
            </summary>
            <param name="subscribedClientsJson">The JSON-encoded subscribed clients objects to deserialize.</param>
            <returns>The deserialized subscribed client objects.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Serializer.SerializePublishingClient(FM.WebSync.Core.PublishingClient)">
            <summary>
            Serializes a publishing client to JSON.
            </summary>
            <param name="publishingClient">The publishing client to serialize.</param>
            <returns>The serialized publishing client.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Serializer.DeserializePublishingClient(System.String)">
            <summary>
            Deserializes a publishing client from JSON.
            </summary>
            <param name="publishingClientJson">The publishing client (in JSON) to deserialize.</param>
            <returns>The deserialized publishing client.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Serializer.SerializeSubscribedChannels(FM.WebSync.Core.SubscribedChannels)">
            <summary>
            Serializes a subscribed channels array to JSON.
            </summary>
            <param name="subscribedChannels">The subscribed channels array to serialize.</param>
            <returns>The serialized subscribed channels array.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Serializer.DeserializeSubscribedChannels(System.String)">
            <summary>
            Deserializes a subscribed channels array from JSON.
            </summary>
            <param name="subscribedChannelsJson">The subscribed channels array (in JSON) to deserialize.</param>
            <returns>The deserialized subscribed channels array.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Serializer.SerializeError(FM.WebSync.Core.Error)">
            <summary>
            Serializes a standard error to JSON.
            </summary>
            <param name="error">The standard error to serialize.</param>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Core.Serializer.DeserializeError(System.String)">
            <summary>
            Deserializes a standard error from JSON.
            </summary>
            <param name="errorJson">The standard error (in JSON) to deserialize.</param>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Core.Serializer.SerializeExtensions(FM.WebSync.Core.Extensions)">
            <summary>
            Serializes an extensions library to a JSON object.
            </summary>
            <param name="extensions">An extensions library to serialize.</param>
            <returns>A serialized JSON object.</returns>
        </member>
        <member name="M:FM.WebSync.Core.Serializer.DeserializeExtensions(System.String)">
            <summary>
            Deserializes an extensions library from a JSON object.
            </summary>
            <param name="extensionsJson">A JSON object to deserialize.</param>
            <returns>A deserialized extensions library.</returns>
        </member>
        <member name="T:FM.WebSync.Core.SubscribedChannels">
            <summary>
            A set of subscribed channels.
            </summary>
            <remarks>
            Accesses to instance members are not thread-safe.
            </remarks>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedChannels.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.SubscribedChannels"/> class
                that is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedChannels.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.SubscribedChannels"/> class
                that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedChannels.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.SubscribedChannels"/> class
                that contains channels copied from the specified collection and has sufficient
                capacity to accommodate the number of channels copied.
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedChannels.ToArray">
            <summary>
            Copies the channels of the <see cref="T:FM.WebSync.Core.SubscribedChannels"/> to a new array.
            </summary>
            <returns>An array containing copies of the channels of the <see cref="T:FM.WebSync.Core.SubscribedChannels"/>.</returns>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedChannels.IndexOf(System.String)">
            <summary>
            Searches for the specified channel and returns the zero-based index of the first
            occurrence within the entire <see cref="T:FM.WebSync.Core.SubscribedChannels"/>.
            </summary>
            <param name="channel">The channel.</param>
            <returns></returns>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedChannels.Insert(System.Int32,System.String)">
            <summary>
            Inserts a channel into the <see cref="T:FM.WebSync.Core.SubscribedChannels"/> at the specified
            index.
            </summary>
            <param name="index">The zero-based index at which the item should be inserted.</param>
            <param name="channel">The channel to insert.</param>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedChannels.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:FM.WebSync.Core.SubscribedChannels"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedChannels.Add(System.String)">
            <summary>
            Adds a channel to the end of the <see cref="T:FM.WebSync.Core.SubscribedChannels"/>.
            </summary>
            <param name="channel">The channel to be added to the end of the <see cref="T:FM.WebSync.Core.SubscribedChannels"/>.</param>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedChannels.Contains(System.String)">
            <summary>
            Determines whether a channel is in the <see cref="T:FM.WebSync.Core.SubscribedChannels"/>.
            </summary>
            <param name="channel">The channel to locate in the <see cref="T:FM.WebSync.Core.SubscribedChannels"/>.</param>
            <returns>True if channel is found in the <see cref="T:FM.WebSync.Core.SubscribedChannels"/>;
            otherwise, false.</returns>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedChannels.CopyTo(System.String[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:FM.WebSync.Core.SubscribedChannels"/> to a compatible one-dimensional
                array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the channels
                copied from <see cref="T:FM.WebSync.Core.SubscribedChannels"/>. The System.Array must have
                zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedChannels.Clear">
            <summary>
            Removes all elements from the <see cref="T:FM.WebSync.Core.SubscribedChannels"/>.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedChannels.Remove(System.String)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:FM.WebSync.Core.SubscribedChannels"/>.
            </summary>
            <param name="channel">The object to remove from the <see cref="T:FM.WebSync.Core.SubscribedChannels"/>. The value
                can be null for reference types.</param>
            <returns>true if item is successfully removed; otherwise, false. This method also
                returns false if item was not found in the <see cref="T:FM.WebSync.Core.SubscribedChannels"/>.</returns>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedChannels.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:FM.WebSync.Core.SubscribedChannels"/>.
            </summary>
            <returns>An enumerator for the <see cref="T:FM.WebSync.Core.SubscribedChannels"/>.</returns>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedChannels.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:FM.WebSync.Core.SubscribedChannels"/>.
            </summary>
            <returns>
            An enumerator object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedChannels.ToJson">
            <summary>
            Serializes this instance to JSON.
            </summary>
            <returns>The JSON-formatted subscribed channels.</returns>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedChannels.ToJson(FM.WebSync.Core.SubscribedChannels)">
            <summary>
            Serializes a subscribed channels array to JSON.
            </summary>
            <param name="subscribedChannels">The subscribed channels array to serialize.</param>
            <returns>The JSON-formatted subscribed channels array.</returns>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedChannels.FromJson(System.String)">
            <summary>
            Deserializes a JSON-formatted subscribed channels array.
            </summary>
            <param name="subscribedChannelsJson">The JSON-formatted subscribed channels array to deserialize.</param>
            <returns>The subscribed channels array.</returns>
        </member>
        <member name="P:FM.WebSync.Core.SubscribedChannels.Count">
            <summary>
            Gets the number of channels actually contained in the <see cref="T:FM.WebSync.Core.SubscribedChannels"/>.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SubscribedChannels.Item(System.Int32)">
            <summary>
            Gets or sets the channel at the specified index.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SubscribedChannels.IsReadOnly">
            <summary>
            Gets whether the <see cref="T:FM.WebSync.Core.SubscribedChannels"/> is read-only.
            </summary>
        </member>
        <member name="T:FM.WebSync.Core.SubscribedClient">
            <summary>
            Details about the client subscribed to the channel.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.SubscribedClient"/> class.
            </summary>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.SubscribedClient"/> class.
            </summary>
            <param name="id">The unique client identifier.</param>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedClient.#ctor(System.String,FM.WebSync.Core.BoundRecords)">
            <summary>
            Initializes a new instance of the <see cref="T:FM.WebSync.Core.SubscribedClient"/> class.
            </summary>
            <param name="id">The unique client identifier.</param>
            <param name="boundRecords">The records bound to the client.</param>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedClient.GetBoundRecord(System.String)">
            <summary>
            Gets a record from the subscribed client's bound records.
            </summary>
            <param name="key">The key of the bound record.</param>
            <returns>The bound record.</returns>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedClient.GetBoundValueJson(System.String)">
            <summary>
            Gets a serialized value stored in the subscribed client's bound records.
            </summary>
            <param name="key">The key of the bound record.</param>
            <returns>The value of the bound record (in JSON format).</returns>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedClient.GetBoundRecords">
            <summary>
            Returns a cloned copy of the <see cref="P:FM.WebSync.Core.SubscribedClient.BoundRecords"/> collection.
            </summary>
            <returns>A cloned copy of the <see cref="P:FM.WebSync.Core.SubscribedClient.BoundRecords"/>.</returns>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedClient.ToJson">
            <summary>
            Serializes this instance to JSON.
            </summary>
            <returns>The JSON-formatted subscribed client.</returns>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedClient.ToJson(FM.WebSync.Core.SubscribedClient)">
            <summary>
            Serializes a subscribed client to JSON.
            </summary>
            <param name="subscribedClient">The subscribed client to serialize.</param>
            <returns>The JSON-formatted subscribed client.</returns>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedClient.FromJson(System.String)">
            <summary>
            Deserializes a JSON-formatted subscribed client.
            </summary>
            <param name="subscribedClientJson">The JSON-formatted subscribed client to deserialize.</param>
            <returns>The subscribed client.</returns>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedClient.ToJsonMultiple(FM.WebSync.Core.SubscribedClient[])">
            <summary>
            Serializes an array of subscribed clients to JSON.
            </summary>
            <param name="subscribedClients">The array of subscribed clients to serialize.</param>
            <returns>The JSON-formatted array of subscribed clients.</returns>
        </member>
        <member name="M:FM.WebSync.Core.SubscribedClient.FromJsonMultiple(System.String)">
            <summary>
            Deserializes a JSON-formatted array of subscribed clients.
            </summary>
            <param name="subscribedClientsJson">The JSON-formatted array of subscribed clients to deserialize.</param>
            <returns>The array of subscribed clients.</returns>
        </member>
        <member name="P:FM.WebSync.Core.SubscribedClient.Id">
            <summary>
            Gets or sets the subscribed client's unique identifier.
            </summary>
        </member>
        <member name="P:FM.WebSync.Core.SubscribedClient.BoundRecords">
            <summary>
            Gets or sets the subscribed client's locally-cached bound records.
            </summary>
        </member>
    </members>
</doc>
